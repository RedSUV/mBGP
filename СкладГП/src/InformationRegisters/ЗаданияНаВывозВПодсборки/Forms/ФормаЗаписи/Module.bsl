
&НаКлиенте
Процедура ОтметитьВывозПакета(Команда)
	ТекДанные = Элементы.Пакеты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат КонецЕсли;
	ПереместитьПакетВПодсборку(ТекДанные.Пакет);
	ОбновлениеДанныхЗаданияНаСервере()
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗаданиеВыполнено(Команда) 
	Ответ = Ждать ВопросАсинх(СтрШаблон("Все пакеты перемещены в %1?", Запись.Подсборка), РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Для Каждого стр из ТаблицаПакеты Цикл
			ПереместитьПакетВПодсборку(стр.Пакет)	
		КонецЦикла; 
		ОбновлениеДанныхЗаданияНаСервере()
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьПакетВПодсборку(Пакет)
	ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(Пакет, Запись.Подсборка, 0,0,ЛОЖЬ); 
	ПереместитьПакетВПодсборкуЛокально(Пакет);
КонецПроцедуры

&НаСервере
Процедура ПереместитьПакетВПодсборкуЛокально(Пакет)
	НЗ = РегистрыСведений.ОстаткиПакетовНаСкладах.СоздатьНаборЗаписей();
	НЗ.ОбменДанными.Загрузка = ИСТИНА;
	НЗ.Отбор.Склад.Установить(Константы.Склад.Получить());
	НЗ.Отбор.НомерПакета.Установить(Пакет); 
	НЗ.Прочитать();
	Если НЗ.Выбран() Тогда 
		НЗ[0].Ячейка = Запись.Подсборка; 
		НЗ[0].Ряд = 0;
		НЗ[0].Уровень = 0; 
		НЗ.Записать(ИСТИНА);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновлениеДанныхЗадания()
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОбновлениеДанныхЗадания()
	ОбновлениеДанныхЗаданияНаСервере()	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОтметитьВывозПакетаАсинх(ПакетID)
	ОбновлениеДанныхЗадания()	
КонецПроцедуры

&НаСервере
Процедура ОбновлениеДанныхЗаданияНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаданияНаВывозВПодсборки.МассивИдПакетов КАК МассивИдПакетов,
	|	АдресПУ.Значение КАК Значение
	|ИЗ
	|	Константа.АдресПУ КАК АдресПУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияНаВывозВПодсборки КАК ЗаданияНаВывозВПодсборки
	|		ПО АдресПУ.Значение = ЗаданияНаВывозВПодсборки.БазаПУ
	|ГДЕ
	|	ЗаданияНаВывозВПодсборки.ЗаявкаНаПогрузку = &ЗаявкаНаПогрузку";
	Запрос.УстановитьПараметр("ЗаявкаНаПогрузку", Запись.ЗаявкаНаПогрузку);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ОбновлениеТаблицыПакетов(Выборка.МассивИдПакетов.Получить())
КонецПроцедуры

&НаСервере
Процедура ОбновлениеТаблицыПакетов(МассивИдентификаторов)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиПакетовНаСкладах.НомерПакета КАК НомерПакета,
	|	ОстаткиПакетовНаСкладах.Ячейка КАК Ячейка,
	|	ОстаткиПакетовНаСкладах.Ряд КАК Ряд,
	|	ОстаткиПакетовНаСкладах.Уровень КАК Уровень,
	|	АдресПУ.Значение КАК Значение,
	|	СвойстваПакетов.Сечение КАК Сечение,
	|	СвойстваПакетов.Сорт КАК Сорт,
	|	СвойстваПакетов.ДлинаТ КАК ДлинаТ,
	|	СвойстваПакетов.Номер КАК Номер,
	|	СвойстваПакетов.ДатаВыпуска КАК ДатаВыпуска
	|ИЗ
	|	Константа.Склад КАК КонстСклад
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиПакетовНаСкладах КАК ОстаткиПакетовНаСкладах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваПакетов КАК СвойстваПакетов
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.АдресПУ КАК АдресПУ
	|				ПО АдресПУ.Значение = СвойстваПакетов.БазаПУ
	|			ПО ОстаткиПакетовНаСкладах.НомерПакета = СвойстваПакетов.НомерПакета
	|		ПО КонстСклад.Значение = ОстаткиПакетовНаСкладах.Склад
	|ГДЕ
	|	ОстаткиПакетовНаСкладах.НомерПакета В(&МассивПакетов)";
	Запрос.УстановитьПараметр("МассивПакетов", МассивИдентификаторов);
	Выборка = Запрос.Выполнить().Выбрать();
	ТаблицаПакеты.Очистить();
	Пока Выборка.Следующий() Цикл
		Нов = ТаблицаПакеты.Добавить();
		Нов.Пакет = Выборка.НомерПакета;
		Нов.НомерПакета = Выборка.Номер;
		Нов.ТекущийАдрес = СтрШаблон("%1/%2/%3", Выборка.Ячейка, Выборка.Ряд, Выборка.Уровень); 
		Нов.Свойства = СтрШаблон("%1 %2 %3м", Выборка.Сечение, Выборка.Сорт, Выборка.ДлинаТ);
	КонецЦикла;
	
КонецПроцедуры
