
&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления()
	Если ОбщегоНазначенияКлиентПовтИсп.ЭтоERP() Тогда
		СписокОбработкаЗапросаОбновленияERP()
	Иначе
		СписокОбработкаЗапросаОбновленияПУ()	
	КонецЕсли; 
	ЗапуститьОбновлениеПодсборок();
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗапросаОбновленияПУ()
	
КонецПроцедуры

&НаСервере
Процедура СписокОбработкаЗапросаОбновленияERP() 
	УстановитьПривилегированныйРежим(ИСТИНА);
	СтруктураЗапроса = УКО.НоваяСтруктураПроизвольногоЗапроса();
	СтруктураЗапроса.ПараметрыЗапроса.Вставить("ИмяСклада", Константы.Склад.Получить().Наименование);	
	СтруктураЗапроса.ТекстЗапроса = 
	"ВЫБРАТЬ
	|	pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка КАК Ссылка,
	|	pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка.ПланДатаПогрузки КАК ПланДатаПогрузки,
	|	pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка.АдресПодсборки КАК АдресПодсборки,
	|	pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка.Контрагент.Наименование КАК Контрагент
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	Документ.pu_ЗаявкаНаПогрузку.ДетальноеОписание КАК pu_ЗаявкаНаПогрузкуДетальноеОписание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад.Наименование = &ИмяСклада) КАК ТоварыНаСкладахОстатки
	|		ПО (pu_ЗаявкаНаПогрузкуДетальноеОписание.Серия = ТоварыНаСкладахОстатки.Серия)
	|			И (pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка.Склад = ТоварыНаСкладахОстатки.Склад)
	|ГДЕ
	|	pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка.Проведен
	|	И НЕ pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка.АдресПодсборки = ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка,
	|	pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка.ПланДатаПогрузки,
	|	pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка.АдресПодсборки,
	|	pu_ЗаявкаНаПогрузкуДетальноеОписание.Ссылка.Контрагент.Наименование
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(вт.Ссылка) КАК ЗаявкаНаПогрузку,
	|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ТЧ.НомерПакета) КАК Пакет,
	|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Рег.Ячейка) КАК Ячейка,
	|	вт.ПланДатаПогрузки КАК ПланДата,
	|	вт.Ссылка.Номер КАК НомерЗаявки,
	|	вт.Контрагент КАК Покупатель,
	|	ВЫРАЗИТЬ(вт.Ссылка.Комментарий КАК СТРОКА(50)) КАК Комментарий,
	|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(вт.АдресПодсборки) КАК Подсборка,
	|	ЛОЖЬ КАК Выполнено
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.pu_ЗаявкаНаПогрузку.ДетальноеОписание КАК ТЧ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.pu_ДвижениеПакетовПоЯчейкамСклада.СрезПоследних КАК Рег
	|			ПО ТЧ.Серия = Рег.СерияПакета
	|		ПО вт.Ссылка = ТЧ.Ссылка
	|ГДЕ
	|	НЕ вт.АдресПодсборки = Рег.Ячейка";
	ДанныеПУ = УКО.ПолучитьДанныеПроизвольногоЗапроса(СтруктураЗапроса); 
	Если ДанныеПУ = Неопределено Тогда
		Возврат 
	КонецЕсли;
	
	НЗ = РегистрыСведений.ЗаданияНаВывозВПодсборки.СоздатьНаборЗаписей(); 
	НЗ.ОбменДанными.Загрузка = ИСТИНА;
	НЗ.Отбор.БазаПУ.Установить(ОбщегоНазначенияВызовСервераПовтИсп.БазаПУ());
	НЗ.Записать(ИСТИНА); 
	ДаннныеЗаявок = ДанныеПУ.Скопировать();
	ДаннныеЗаявок.Свернуть("ЗаявкаНаПогрузку,Подсборка,Выполнено,ПланДата,НомерЗаявки,Покупатель,Комментарий"); 
	Для Каждого стр из ДаннныеЗаявок Цикл
		Нов = НЗ.Добавить();              
		Нов.БазаПУ = ОбщегоНазначенияВызовСервераПовтИсп.БазаПУ();
		ЗаполнитьЗначенияСвойств(Нов,стр);                        
		Нов.Подсборка = Справочники.Ячейки.ПолучитьСсылку(стр.Подсборка);
		ДанныеПакетов = ДанныеПУ.Скопировать(Новый Структура("ЗаявкаНаПогрузку", Нов.ЗаявкаНаПогрузку));
		МассивПакетов = ДанныеПакетов.ВыгрузитьКолонку("Пакет");
		Нов.МассивИдПакетов = Новый ХранилищеЗначения(МассивПакетов, Новый СжатиеДанных(1));
	КонецЦикла;
	НЗ.Записать(ИСТИНА);
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьОбновлениеПодсборок()  
	РегистрыСведений.НазначенныеПодсборки.ОбновитьРегистрПоЗаданиямНаВывоз();
	//ФоновыеЗадания.Выполнить("РегистрыСведений.НазначенныеПодсборки.ОбновитьРегистрПоЗаданиямНаВывоз", Новый Массив, "Обновление подсборок", "Обновление подсборок")
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьСписок(Команда)
	СписокОбработкаЗапросаОбновления()
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СписокОбработкаЗапросаОбновления()
КонецПроцедуры
