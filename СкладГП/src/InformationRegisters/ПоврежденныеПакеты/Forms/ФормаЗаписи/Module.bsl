
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Параметры.НомерПакета) Тогда
		Запись.Номер = Параметры.НомерПакета;
	КонецЕсли;
	Если ЗначениеЗаполнено(Запись.Пакет) Тогда
		СвойстваПакета = Пакеты.СвойстваПакетаМоб(Запись.Пакет);
		Если Не СвойстваПакета = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СвойстваПакета);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Запись.Номер) Тогда
		СвойстваПакета = Пакеты.СвойстваПакетаМоб(Запись.Номер);
		Если СвойстваПакета = Неопределено Тогда
			Отказ = ИСТИНА;
			Возврат;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СвойстваПакета);
		Запись.Пакет = СвойстваПакета.НомерПакета;
	КонецЕсли;
	ЗаполнитьФормуИзСтроки_ДанныеПовреждений(Запись.ДанныеПовреждений);
	Если Запись.ВыгруженПУ Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НомерПакетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	ОповещениеПослеВыбора = Новый ОписаниеОповещения("ПослеВыбораПакетаИнтерактивно", ЭтотОбъект);
	
	Пакеты_Клиент.НачатьСканирование1с(ОповещениеПослеВыбора);
	//ОбщегоНазначенияКлиент.ОткрытьФормуВыбораПакета(ЭтотОбъект, ОповещениеПослеВыбора, Запись.Пакет);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПакетаИнтерактивно(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда Возврат КонецЕсли; 
	СвойстваПакета = Пакеты_ВызовСервера.СвойстваПакетаМоб(Результат);
	Если СвойстваПакета = Неопределено Тогда
		ПоказатьПредупреждение(,"Номер пакета введен неверно");
		Возврат;
	КонецЕсли;
	
	ОбновитьОписаниеПакета(СвойстваПакета);
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьОписаниеПакета(СвойстваПакета = НЕОПРЕДЕЛЕНО) Экспорт
	Если СвойстваПакета = НЕОПРЕДЕЛЕНО Тогда
		СвойстваПакета = Пакеты_ВызовСервера.СвойстваПакетаМоб(Запись.Пакет);
	КонецЕсли;
	
	Если СвойстваПакета = Неопределено Тогда
		Номер = "";
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СвойстваПакета);
	Запись.Пакет = СвойстваПакета.НомерПакета;
КонецПроцедуры 

&НаКлиенте
Процедура НомерПакетаПриИзменении(Элемент)
	ОповещениеПослеВыбора = Новый ОписаниеОповещения("ПослеВыбораПакетаИнтерактивно", ЭтотОбъект);
	ВыполнитьОбработкуОповещения(ОповещениеПослеВыбора, Номер);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Если ЗначениеЗаполнено(ТекущийОбъект.Пакет) Тогда
		СвойстваПакета = Пакеты_ВызовСервера.СвойстваПакетаМоб(ТекущийОбъект.Пакет);
		Если СвойстваПакета = Неопределено Тогда
			Возврат 
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СвойстваПакета);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФотоНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда
		ДМ = ОбщегоНазначенияКлиент.ПолучитьДанныеФотоСнимка(Новый РазрешениеКамерыУстройства(1080, 1920), 20);
		Если НЕ ДМ = Неопределено Тогда
			ДД = ДМ.ПолучитьДвоичныеДанные();
			Запись.Фото = Base64Строка(ДД);
			АдресФото = ПоместитьВоВременноеХранилище(ДД, УникальныйИдентификатор);
		КонецЕсли;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАдресФото()
	Если ЗначениеЗаполнено(Запись.Фото) Тогда
		АдресФото = ПоместитьВоВременноеХранилище(Base64Значение(Запись.Фото), УникальныйИдентификатор);	
	Иначе
		АдресФото = "";	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПроверитьВыполнениеОбновленийОткрытьОсновноеОкно();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыполнениеОбновленийОткрытьОсновноеОкно() Экспорт
	ОтключитьОбработчикОжидания("ПроверитьВыполнениеОбновленийОткрытьОсновноеОкно");
	Если ДлительныеОперацииКлиент.ФоновоеЗаданиеАктивно("СлужебныйОбновление.ОбновитьОстаткиПакетовНаСкладе") Тогда
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОжидание;
		ПодключитьОбработчикОжидания("ПроверитьВыполнениеОбновленийОткрытьОсновноеОкно",1);
	Иначе
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.ОсновнаяСтраница;
		ДействияПриОткрытииФормы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействияПриОткрытииФормы()
	ЗаполнитьАдресФото();
	НастроитьГруппуВыбораСторонКубика();
	НастроитьГруппуВыбораОшибокУпаковки();
	ПриИзмененииПараметровЭкрана();
КонецПроцедуры


&НаКлиенте
Процедура ЯчейкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	ДействиеПослеЗакрытияВыбораШтабеля = Новый ОписаниеОповещения("ДействиеПослеЗакрытияВыбораШтабеля", ЭтотОбъект);
	ОткрытьФорму("Справочник.Ячейки.Форма.ФормаВыбораСектора", Новый Структура("ВыбраныйШтабель", Ячейка), ЭтаФорма,,,,ДействиеПослеЗакрытияВыбораШтабеля)
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПослеЗакрытияВыбораШтабеля(Результат, ДопПар) ЭКспорт
	Если Результат = Неопределено Тогда 
		Возврат
	КонецЕсли;
	
	Ячейка = Результат;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Запись.Склад = ОбщегоНазначенияВызовСервераПовтИсп.Склад();	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Модифицированность и ЗначениеЗаполнено(Запись.Пакет) и ЗначениеЗаполнено(Ячейка) и ЗначениеЗаполнено(Ряд) и ЗначениеЗаполнено(Уровень) Тогда
		ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(Запись.Пакет, Ячейка, Ряд, Уровень, ИСТИНА);	
	КонецЕсли;
	
	Запись.Номер = Номер;
	Запись.ДатаОбнаружения = ТекущаяДата();
	Запись.Склад = ОбщегоНазначенияВызовСервераПовтИсп.Склад();	
	Запись.ДанныеПовреждений = ПодготовитьСтроку_ДанныеПовреждений();
	
	Если Не ЗначениеЗаполнено(Запись.ИдентификаторЗаписи) Тогда
		Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьСтроку_ДанныеПовреждений()
	Возврат ПоврежденныеПакетыВызовСервера.ПодготовитьСтроку_ДанныеПовреждений(ЭтотОбъект);
КонецФункции

&НаСервере
Процедура ЗаполнитьФормуИзСтроки_ДанныеПовреждений(СтрокаПовреждений)
	ПоврежденныеПакетыВызовСервера.ЗаполнитьФормуИзСтроки_ДанныеПовреждений(ЭтотОбъект, СтрокаПовреждений);
КонецПроцедуры

&НаКлиенте
Процедура АдресПакетаНажатие(Элемент, СтандартнаяОбработка)
	Пар = Новый Структура;
	Пар.Вставить("Пакет", Запись.Пакет);
	Пар.Вставить("Ячейка", Ячейка);
	ДействиеПослеИзмененияРазмещенияПакета = Новый ОписаниеОповещения("ДействиеПослеИзмененияРазмещенияПакета", ЭтотОбъект, Пар);
	ОткрытьФорму("ОбщаяФорма.ФормаУстановкиПакетаВЯчейку", Пар, ЭтотОбъект,,,,ДействиеПослеИзмененияРазмещенияПакета);
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПослеИзмененияРазмещенияПакета(Результат, ДопПар) Экспорт
	ОбновитьОписаниеПакета(НЕОПРЕДЕЛЕНО);	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФото(Команда)
	Элементы.СтраницыПоврежденияФото.ТекущаяСтраница = Элементы.СтраницаФото;
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяВПовреждения(Команда)
	Элементы.СтраницыПоврежденияФото.ТекущаяСтраница = Элементы.СтраницаПовреждения;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьГруппуВыбораСторонКубика()
	
	СоотвЭлементов = Новый Соответствие;
	СоотвЭлементов.Вставить(Элементы.ВыбратьБок,	 Элементы.СтраницаБок);
	СоотвЭлементов.Вставить(Элементы.ВыбратьВерх,	 Элементы.СтраницаВерх);
	СоотвЭлементов.Вставить(Элементы.ВыбратьТорец,	 Элементы.СтраницаТорец);
	СоотвЭлементов.Вставить(Элементы.ВыбратьУглы,	 Элементы.СтраницаУглы);
	
	ОбщегоНазначенияКлиент.НастроитьГруппуКнопокВыбораСтраниц(Элементы.СтраницыКубика, СоотвЭлементов);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьГруппуВыбораОшибокУпаковки()
	
	СоотвЭлементов = Новый Соответствие;
	СоотвЭлементов.Вставить(Элементы.ВыборОшибкиЦСП,	 Элементы.СтраницаОшибкиЦСП);
	СоотвЭлементов.Вставить(Элементы.ВыборОшибкиОТК,	 Элементы.СтраницаОшибкиОТК);
	
	ОбщегоНазначенияКлиент.НастроитьГруппуКнопокВыбораСтраниц(Элементы.СтраницыОшибки, СоотвЭлементов);

КонецПроцедуры

&НаКлиенте
Процедура СтраницыКубикаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	НастроитьГруппуВыбораСторонКубика()	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСтраницуКубика(Команда)
	Элементы.СтраницыКубика.ТекущаяСтраница = Элементы[Команда.Имя];
	НастроитьГруппуВыбораСторонКубика();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСтраницуОшибокУпаковки(Команда)
	Элементы.СтраницыОшибки.ТекущаяСтраница = Элементы[Команда.Имя];
	НастроитьГруппуВыбораОшибокУпаковки();
КонецПроцедуры

&НаКлиенте
Процедура СтраницыОшибкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	НастроитьГруппуВыбораОшибокУпаковки();
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	ОбщегоНазначенияКлиент.ЗаполнитьСвойстваФормыПриИзмененииПараметровЭкрана(ЭтаФорма);
	
	Если Не ГоризонтальноеПоложениеЭкрана Тогда
		Элементы.ГруппаПленкаВерх.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаПродукцияВерх.Группировка	 = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаПленкаБок.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаПродукцияБок.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаПленкаТорец.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаПродукцияТорец.Группировка	 = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаПленкаУглы.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаПродукцияУглы.Группировка	 = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Иначе
		Элементы.ГруппаПленкаВерх.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ГруппаПродукцияВерх.Группировка	 = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ГруппаПленкаБок.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ГруппаПродукцияБок.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ГруппаПленкаТорец.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ГруппаПродукцияТорец.Группировка	 = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ГруппаПленкаУглы.Группировка		 = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ГруппаПродукцияУглы.Группировка	 = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	НЗ = РегистрыСведений.ПоврежденныеПакеты.СоздатьНаборЗаписей();
	НЗ.Отбор.Склад.Установить(Запись.Склад);
	НЗ.Отбор.Пакет.Установить(Запись.Пакет);
	НЗ.Отбор.ИдентификаторЗаписи.Установить(Запись.ИдентификаторЗаписи);
	МобильноеПриложениеСкладПУ.ЗарегистрироватьВПланеОбмена(НЗ);
КонецПроцедуры

