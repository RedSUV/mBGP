
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВыбраннаяЯчейка = Параметры.Ячейка; 
	КоличествоУровнейЯчейки = 5;
	ИспользоватьЗвуковойПомощник = Константы.ИспользоватьЗвуковойПомощник.Получить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОтобразитьКачествоСвязи();
	ПриИзмененииПараметровЭкрана(ЛОЖЬ);
	
	Если ЗначениеЗаполнено(ВыбраннаяЯчейка) Тогда
		ВыбраннаяЯчейкаПриИзменении(НЕОПРЕДЕЛЕНО)
	Иначе
		ПодключитьОбработчикОжидания("ОткрытьФормуВыбораШтабеля", 0.1,ИСТИНА);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбраннаяЯчейкаПриИзменении(Элемент)
	Заголовок = СтрШаблон("Штабель %1 - %2", ВыбраннаяЯчейка, ?(ОбратнаяОриентация, "вид слева", "вид справа")); 
	Элементы.СменитьШтабель.Заголовок = ВыбраннаяЯчейка;
	НачатьЗаполнениеЯчейки();
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗаполнениеЯчейки() Экспорт
	ИзменилиВилы = ЛОЖЬ;
	ЗаполнениеЯчейкиНаСервере(ИСТИНА, ИзменилиВилы); 
	Если ИзменилиВилы Тогда
		Оповестить("ИзмененыПакетыНаВилах");
	КонецЕсли;
	
	СтраницыРядовПриСменеСтраницы(Элементы.СтраницыРядов, Элементы.СтраницыРядов.ТекущаяСтраница);
	
	ПоменятьОриентациюНастроитьКнопку();
	Если ЗначениеЗаполнено(Параметры.Пакет) Тогда
		СтрокаОписанияТекЯчейки = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиентеПоИД(Параметры.Пакет, ПакетыНаВилах);	
		Если Не СтрокаОписанияТекЯчейки = Неопределено Тогда
			ВыделитьПакет(Элементы[СтрокаОписанияТекЯчейки.ИмяЭлементаФормы], СтрокаОписанияТекЯчейки);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыФормы(ОчистилиВилы = ЛОЖЬ, Локально = ЛОЖЬ)
	ЯчейкиСклада.ЗаполнитьТаблицуРядыЯчейки(ЭтотОбъект, ВыбраннаяЯчейка, Локально);
	ЯчейкиСклада.ЗаполнитьТаблицуПакетовВил(ЭтотОбъект, ОчистилиВилы);
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеЯчейкиНаСервере(ПолучитьДанныеИБ = ИСТИНА, ОчистилиВилы = ЛОЖЬ)
	
	Если ПолучитьДанныеИБ или РядыЯчейки.Количество() = 0 Тогда
		ЗаполнитьТаблицыФормы(ОчистилиВилы)
	КонецЕсли;
	
	э_ВыбранныйЭлементИмя = "";
	э_ВыбранныйПакет = НЕОПРЕДЕЛЕНО;
	э_ВыбранныйПакетID = НЕОПРЕДЕЛЕНО;
	
	НастроитьФорму();
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомандуКонтекстногоМеню(ЭлементПакета, суфиксКоманды, Действие)
	
	мЗаголовокКоманды = СуффиксыДобавленныхКоманд()[суфиксКоманды];
	ИмяКоманды = ЭлементПакета.Имя + суфиксКоманды;
	НоваяКоманда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	НоваяКоманда.Заголовок = мЗаголовокКоманды;
	НоваяКоманда.Действие = Действие; 
	
	НовЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы[ЭлементПакета.Имя+"КонтекстноеМеню"]);
	НовЭлемент.ИмяКоманды = ИмяКоманды;
	НовЭлемент.Заголовок = мЗаголовокКоманды;
	НовЭлемент.Высота = 2;	
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму()

	Элементы.ДекорацияГруппаПакетыБезРядов.Видимость = (ПакетыБезРядов.Количество()>0);
	
	Если ГоризонтальноеПоложениеЭкрана Тогда
		
		Элементы.ГруппаПакетыБезРядов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ДекорацияГруппаПакетыБезРядов.Заголовок = "без рядов";
		Элементы.Переместить(Элементы.ДекорацияГруппаПакетыБезРядов, Элементы.ГруппаВил);
		
		Элементы.ГруппаВилыШтабель.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		ШиринаВил = 15;
		
		Элементы.ГруппаВил.Ширина = ШиринаВил;
		Элементы.ГруппаВил.РастягиватьПоГоризонтали = ЛОЖЬ;
		Элементы.ГруппаКомПанелиВил.Ширина = ШиринаВил;
		Элементы.ГруппаПакетыНаВилах.РастягиватьПоГоризонтали = ЛОЖЬ;
        Элементы.ГруппаПакетыНаВилах.Ширина = ШиринаВил; 
		Элементы.ГруппаПакетыНаВилах.РастягиватьПоВертикали = Истина;
        Элементы.ГруппаВил.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаПакетыНаВилах.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		
	Элементы.ДекорацияГруппаПакетыБезРядов.Видимость = Ложь;

	Иначе
		
		Элементы.ГруппаПакетыБезРядов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ДекорацияГруппаПакетыБезРядов.Заголовок = "Пакеты без рядов"; 
		Элементы.Переместить(Элементы.ДекорацияГруппаПакетыБезРядов, Элементы.ГруппаПакетыБезРядов);
		
		Элементы.ГруппаВилыШтабель.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		
		ШиринаВил = 0;

		Элементы.ГруппаВил.Ширина = ШиринаВил;
		Элементы.ГруппаВил.РастягиватьПоГоризонтали = ИСТИНА;
		Элементы.ГруппаКомПанелиВил.Ширина = ШиринаВил;
		Элементы.ГруппаПакетыНаВилах.РастягиватьПоГоризонтали = ИСТИНА;
        Элементы.ГруппаПакетыНаВилах.Ширина = ШиринаВил;
		Элементы.ГруппаПакетыНаВилах.РастягиватьПоВертикали = НЕОПРЕДЕЛЕНО;
		Элементы.ГруппаВил.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаПакетыНаВилах.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
	КонецЕсли;
	
	ВывестиШтабельНаФормуПоТекущийНастройкам()
	
КонецПроцедуры 

&НаСервере
Процедура ВывестиШтабельНаФормуПоТекущийНастройкам()

	ЯчейкиСклада.ВывестиПредставлениеШтабеляНаФорму(ЭтотОбъект, ШиринаЭкрана, ОбратнаяОриентация);
	ЯчейкиСклада.ВывестиПредставлениеВилНаФорму(ЭтотОбъект,  ШиринаЭкрана, ОбратнаяОриентация);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделениеВыделенногоПакета()
	Если Не ЗначениеЗаполнено(э_ВыбранныйЭлементИмя) Тогда Возврат КонецЕсли; 
	элФормы = Элементы.Найти(э_ВыбранныйЭлементИмя); 
	Если Не элФормы = Неопределено Тогда
		ОбщегоНазначенияКлиент.УстановитьСтилиДекорации(Элементы, Элементы[э_ВыбранныйЭлементИмя], ЯчейкиСкладаКлиент.СтильДекорацииОбычныйПакет());
	КонецЕсли;
	э_ВыбранныйЭлементИмя = "";
	э_ВыбранныйПакет = НЕОПРЕДЕЛЕНО;
	э_ВыбранныйПакетID = НЕОПРЕДЕЛЕНО;
КонецПроцедуры

&НаКлиенте
Процедура ОформитьВыделенныйПакет()
	Если ЗначениеЗаполнено(э_ВыбранныйЭлементИмя) Тогда
		ОбщегоНазначенияКлиент.УстановитьСтилиДекорации(Элементы, Элементы[э_ВыбранныйЭлементИмя], ЯчейкиСкладаКлиент.СтильДекорацииВыделенныйПакет());	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьПакет(Элемент, СтрокаОписанияТекЯчейки)
	э_ВыбранныйЭлементИмя = Элемент.Имя;
	э_ВыбранныйПакет = СтрокаОписанияТекЯчейки.Пакет;
	э_ВыбранныйПакетID = СтрокаОписанияТекЯчейки.ПакетID;
	ОбщегоНазначенияКлиент.УстановитьСтилиДекорации(Элементы, Элемент, ЯчейкиСкладаКлиент.СтильДекорацииВыделенныйПакет());
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВыборМенюДействийПакета(ЭлементВызова, СтрокаОписанияТекЯчейки)
	ОбработкаВыбораСтрокиМенюДействийПакета = Новый ОписаниеОповещения("ОбработкаВыбораСтрокиМенюДействийПакета", ЭтотОбъект, Новый Структура("Элемент,СтрокаОписания", ЭлементВызова,СтрокаОписанияТекЯчейки));
	
	СписокМеню = Новый СписокЗначений();
	СписокМеню.Добавить("ПереместитьПакет", "Переместить",, БиблиотекаКартинок.ПеренестиЭлемент);
	Если СтрокаОписанияТекЯчейки.Свойство("Ряд") И ЗначениеЗаполнено(СтрокаОписанияТекЯчейки.Ряд) Тогда
		СписокМеню.Добавить("УдалитьИзШтабеля", "Удалить из штабеля",, БиблиотекаКартинок.Удалить);
		
		Если ОбщегоНазначенияВызовСервераПовтИсп.ДоступРегистрацияПоврежденийПакетов() Тогда
			СписокМеню.Добавить("ПакетПоврежден",	"Пакет поврежден",, БиблиотекаКартинок.АктивироватьЗадачу);
		КонецЕсли;
		
	КонецЕсли;
	Если СписокМеню.Количество()>1 Тогда
		ПоказатьВыборИзМеню(ОбработкаВыбораСтрокиМенюДействийПакета, СписокМеню, ЭлементВызова);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораСтрокиМенюДействийПакета(ВыбранныйЭлемент, Параметры) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда Возврат КонецЕсли;
	
	Если ВыбранныйЭлемент.Значение = "УдалитьИзШтабеля" Тогда
		УдалитьПакетИзЯчейки(Параметры.Элемент, Параметры.СтрокаОписания)	
	ИначеЕсли ВыбранныйЭлемент.Значение = "ПакетПоврежден" Тогда
		СтрокаОписания = Параметры.СтрокаОписания;
		Если ПоврежденныеПакетыВызовСервера.ПакетПоврежден(СтрокаОписания.ПакетID) Тогда
			Сообщить("Пакет уже находится в списке поврежденных");
		Иначе
			Пар = Новый Структура("НомерПакета, Пакет", СтрокаОписания.Пакет, СтрокаОписания.ПакетID);
			ОткрытьФорму("РегистрСведений.ПоврежденныеПакеты.ФормаЗаписи", Пар, ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПакетНажатие(Элемент, СтандартнаяОбработка)
	Перем ПакетВРядах, ПакетНаВилах, СтрокаОписанияТекЯчейки;
	
	ПакетВРядах = ИСТИНА;
	ПакетНаВилах = ЛОЖЬ;
	СтрокаОписанияТекЯчейки = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиенте(Элемент.Имя, РядыЯчейки);
	Если СтрокаОписанияТекЯчейки = НЕОПРЕДЕЛЕНО Тогда //Поищем в без рядов
		ПакетВРядах = ЛОЖЬ;
		СтрокаОписанияТекЯчейки = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиенте(Элемент.Имя, ПакетыБезРядов);
		Если СтрокаОписанияТекЯчейки = НЕОПРЕДЕЛЕНО Тогда
			СтрокаОписанияТекЯчейки = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиенте(Элемент.Имя, ПакетыНаВилах);
			ПакетНаВилах = (НЕ СтрокаОписанияТекЯчейки = НЕОПРЕДЕЛЕНО);
		КонецЕсли;
	КонецЕсли;
	Если СтрокаОписанияТекЯчейки = НЕОПРЕДЕЛЕНО Тогда Возврат КонецЕсли;
	
	Если ЗначениеЗаполнено(э_ВыбранныйЭлементИмя) и ЗначениеЗаполнено(э_ВыбранныйПакет) Тогда
		
		Если ПакетВРядах Тогда
			Если ЗначениеЗаполнено(СтрокаОписанияТекЯчейки.Пакет) Тогда
				Если СтрокаОписанияТекЯчейки.Пакет = э_ВыбранныйПакет Тогда
					СнятьВыделениеВыделенногоПакета();	
				Иначе
					СнятьВыделениеВыделенногоПакета();
					ВыделитьПакет(Элемент, СтрокаОписанияТекЯчейки);
				КонецЕсли;
			Иначе
				ЯчейкиСкладаВызовСервера.УбратьПакетСВил(э_ВыбранныйПакетID);
				ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(э_ВыбранныйПакетID, ВыбраннаяЯчейка, СтрокаОписанияТекЯчейки.Ряд, СтрокаОписанияТекЯчейки.Уровень, ЛОЖЬ);//ИСТИНА);	
				СнятьВыделениеВыделенногоПакета();
			КонецЕсли;
		ИначеЕсли ПакетНаВилах Тогда
			Если ЗначениеЗаполнено(СтрокаОписанияТекЯчейки.Пакет) Тогда
				Если СтрокаОписанияТекЯчейки.Пакет = э_ВыбранныйПакет Тогда
					СнятьВыделениеВыделенногоПакета();	
				Иначе
					СнятьВыделениеВыделенногоПакета();
					ВыделитьПакет(Элемент, СтрокаОписанияТекЯчейки);
				КонецЕсли;
			Иначе 
				ЯчейкиСкладаВызовСервера.ДобавитьПакетНаВилы(э_ВыбранныйПакетID);
				ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(э_ВыбранныйПакетID, ВыбраннаяЯчейка, 0, 0, ЛОЖЬ);
				СнятьВыделениеВыделенногоПакета();
			КонецЕсли;
			//Оповестить("ИзмененыПакетыНаВилах");
		Иначе
			Если Элемент = Элементы[э_ВыбранныйЭлементИмя] Тогда
				СнятьВыделениеВыделенногоПакета();	
			Иначе
				СнятьВыделениеВыделенногоПакета();
				
				э_ВыбранныйЭлементИмя = Элемент.Имя;
				э_ВыбранныйПакет = СтрокаОписанияТекЯчейки.Пакет;
				э_ВыбранныйПакетID = СтрокаОписанияТекЯчейки.ПакетID;
				ОбщегоНазначенияКлиент.УстановитьСтилиДекорации(Элементы, Элемент, ЯчейкиСкладаКлиент.СтильДекорацииВыделенныйПакет());
				
			КонецЕсли;
		КонецЕсли; 
		Оповестить("ИзмененыПакетыНаВилах");

	Иначе
		
		Если ЗначениеЗаполнено(СтрокаОписанияТекЯчейки.Пакет) Тогда
			
			ВыделитьПакет(Элемент, СтрокаОписанияТекЯчейки);
			
		Иначе

			ЯчейкиСкладаКлиент.ОткрытьФормуВыбораПакетаДляЭлементаШтабеля(ЭтотОбъект, ВыбраннаяЯчейка, Элемент, РядыЯчейки, ПакетыНаВилах);
			
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры   

&НаКлиенте
Процедура ОповещениеПослеВыбораМенюДействияПакета(Результат, ДопПар) Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПакетПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Состояние(Элемент.Имя)
КонецПроцедуры  

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана(ПерестроитьФорму = ИСТИНА)
	ОбщегоНазначенияКлиент.ЗаполнитьСвойстваФормыПриИзмененииПараметровЭкрана(ЭтаФорма);
	Если ГоризонтальноеПоложениеЭкрана Тогда
		ГоризонтальноПакетовНаФорме = 4;
		КоличествоУровнейЯчейки = 5;	
	Иначе
		ГоризонтальноПакетовНаФорме = 2;
		КоличествоУровнейЯчейки = 6
	КонецЕсли;
	Если ПерестроитьФорму Тогда
		НастроитьФорму();          
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДополнитьРядПустымиПакетами(Ряд)
	Для инд = 1 по КоличествоУровнейЯчейки Цикл 
		СтрокиРядаУровня = РядыЯчейки.НайтиСтроки(Новый Структура("Ряд,Уровень", Ряд, инд));
		Если СтрокиРядаУровня.Количество() = 0 Тогда
			Нов = РядыЯчейки.Добавить();
			Нов.Пакет = ПредопределенноеЗначение("Справочник.Ячейки.ПустаяСсылка");
			Нов.Ряд = Ряд;
			Нов.Уровень = инд;
		ИначеЕсли Не ЗначениеЗаполнено(СтрокиРядаУровня[0].Пакет) Тогда
			Нов = СтрокиРядаУровня[0];
			Нов.Пакет = ПредопределенноеЗначение("Справочник.Ячейки.ПустаяСсылка");
			Нов.Ряд = Ряд;
			Нов.Уровень = инд;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДобавитьРяд(Команда) 
	Если ОбратнаяОриентация Тогда
		ДобавитьРядНаСервере(ЛОЖЬ);
	Иначе
		ДобавитьРядНаСервере(ИСТИНА);
	КонецЕсли; 
	ОформитьВыделенныйПакет();
КонецПроцедуры

&НаСервере
Процедура ДобавитьРядНаСервере(Слева);
	ЯчейкиСкладаВызовСервера.ДобавитьРядНаСервере(ВыбраннаяЯчейка, РядыЯчейки, ТекущийРяд, КоличествоУровнейЯчейки, Слева);	
	ВывестиШтабельНаФормуПоТекущийНастройкам();
КонецПроцедуры

&НаСервере
Функция суффиксыДобавленныхКоманд() Экспорт
	суффиксы = Новый Структура();
	суффиксы.Вставить("_УстановитьПакетЯчейку",	 "Установить пакет в ячейку");
	суффиксы.Вставить("_ВыборПакета",			 "Установить пакет");
	суффиксы.Вставить("_ЗабратьПакет",			 "Забрать пакет"); 
	суффиксы.Вставить("_ВывезПакет",			 "Вывез по заданию");
	суффиксы.Вставить("_ОткрытьСвойства",		 "Свойства пакета");
	суффиксы.Вставить("_СброситьСВил",			 "Сбросить с вил");
	суффиксы.Вставить("_УдалитьИзЯчейки",		 "Удалить");
	Возврат суффиксы;
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия  = "ИзменениеРазмещенияПакета" Тогда
		Если ТипЗнч(Параметр) = Тип("Структура") Тогда
			Если Параметр.Ячейка = ВыбраннаяЯчейка Тогда 
				Если Параметр.Свойство("Обновить") Тогда
					Если Параметр.Обновить Тогда
						ЗаполнитьТаблицыФормы(,);	
					КонецЕсли;
				КонецЕсли;
				ВывестиШтабельНаФормуПоТекущийНастройкам();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзменениеКачестваСвязи" Тогда
		
		ОтобразитьКачествоСвязи();
		
	ИначеЕсли ИмяСобытия = "ИзмененыПакетыНаВилах" Тогда 
		Если Не (Параметр = "ЗакрытиеФормы" и Источник = ЭтотОбъект) Тогда
			ЗаполнитьТаблицыФормы(ИСТИНА, Не ЕстьСвязь);	
			ВывестиШтабельНаФормуПоТекущийНастройкам();
		КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьКачествоСвязи() Экспорт
	Элементы.КнопкаЕстьСвязь.Картинка = ?(ЕстьСвязь, БиблиотекаКартинок.КругЗеленый, БиблиотекаКартинок.КругКрасный)
	//ЕстьСвязь_ = ЕстьСвязь;
КонецПроцедуры


#Область ДействияМенюПакетов

&НаКлиенте
Функция ПолучитьЭлементКартинкиПоКоманде(Команда)
	Перем ЭлементКартинки;
	
	ИмяКоманды = Команда.Имя;
	Для Каждого м из СуффиксыДобавленныхКоманд() Цикл
		Если СтрНайти(ИмяКоманды, м.Ключ) > 0 Тогда
			мИмяТекущегоЭлемента = СтрЗаменить(Команда.Имя, м.Ключ, "");
			ЭлементКартинки = Элементы.Найти(мИмяТекущегоЭлемента);
			Возврат ЭлементКартинки;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Асинх Процедура ЗадатьВопросОбУстановкеПакетаЯчейку(СтрокаОписания, Уровень)
	ТекстВопроса = СтрШаблон("Установить пакет %1 на уровень %2?", СтрокаОписания.Пакет, Уровень);
	Ответ = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(СтрокаОписания.ПакетID, ВыбраннаяЯчейка, 1, Уровень); 
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПакетЯчейку(Команда)
	Уровень = 0;
	Для Каждого стр из РядыЯчейки.НайтиСтроки(Новый Структура("Ряд", 1)) Цикл 
		Если ЗначениеЗаполнено(стр.Пакет) Тогда
			Уровень = Макс(Уровень, стр.Уровень);
		КонецЕсли;
	КонецЦикла;
	Уровень = Уровень + 1;
	Если Уровень > КоличествоУровнейЯчейки Тогда
		ПоказатьПредупреждение(, "Превышено максимальное количество уровней! Добавьте новый ряд пакетов");
		Возврат
	КонецЕсли;
	
	ЭлементКартинки = ПолучитьЭлементКартинкиПоКоманде(Команда);
	
	СтрокаОписания = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиенте(ЭлементКартинки.Имя, ПакетыБезРядов);
	Если СтрокаОписания = Неопределено Тогда
		Возврат
	Иначе 
		ЗадатьВопросОбУстановкеПакетаЯчейку(СтрокаОписания, Уровень) 
	КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура ПоказатьФормуВыбораПакета(Команда)
	
	ЭлементКартинки = ПолучитьЭлементКартинкиПоКоманде(Команда);
	ЯчейкиСкладаКлиент.ОткрытьФормуВыбораПакетаДляЭлементаШтабеля(ЭтаФорма, ВыбраннаяЯчейка, ЭлементКартинки, РядыЯчейки);
	
КонецПроцедуры  

&НаКлиенте
Процедура ПослеВыбораПакетаИнтерактивно(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда Возврат КонецЕсли; 
	Если Не ТипЗнч(ДопПараметры) = Тип("ДекорацияФормы") Тогда Возврат КонецЕсли;
	
	СтрокиРядов = РядыЯчейки.НайтиСтроки(Новый Структура("ИмяЭлементаФормы", ДопПараметры.Имя));
	
	Если НЕ СтрокиРядов.Количество() = 0 Тогда
		ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(Результат, ВыбраннаяЯчейка, СтрокиРядов[0].Ряд, СтрокиРядов[0].Уровень);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Асинх Процедура УдалитьПакетИзЯчейки(ЭлементКартинки, СтрокаОписания)
	
	ТекстВопроса = "Оставить пакет в нераспредленных?";
	Ответ = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ВыбраннаяЯчейка = ПредопределенноеЗначение("Справочник.Ячейки.ПустаяСсылка");
	Иначе
		Возврат;
	КонецЕсли;
	
	Успех = Ждать ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(СтрокаОписания.ПакетID, ВыбраннаяЯчейка, 0, 0, ЛОЖЬ); 
	Если Успех Тогда
		НачатьЗаполнениеЯчейки();
		//ВывестиШтабельНаФормуПоТекущийНастройкам()
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗабратьПакетИзЯчейки(Команда)
	
	ЭлементКартинки = ПолучитьЭлементКартинкиПоКоманде(Команда);
	СтрокаОписания = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиенте(ЭлементКартинки.Имя, РядыЯчейки);
	
	ТекстВопроса = СтрШаблон("Забрать пакет %1?", СтрокаОписания.Пакет);
	Ответ = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УдалитьПакетИзЯчейки(ЭлементКартинки, СтрокаОписания);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ВывезПакетИзЯчейкиПоЗаданию(Команда)
	
	ЭлементКартинки = ПолучитьЭлементКартинкиПоКоманде(Команда);
	СтрокаОписания = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиенте(ЭлементКартинки.Имя, РядыЯчейки);
	Если ЗначениеЗаполнено(СтрокаОписания.Назначение) Тогда
		ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(СтрокаОписания.ПакетID, СтрокаОписания.Назначение, 0, 0,ЛОЖЬ);	
		Оповестить("ИзмененыПакетыНаВилах", Новый Структура("Пакет, Ячейка, Ряд, Уровень", НЕОПРЕДЕЛЕНО, ВыбраннаяЯчейка, 0, 0));
	Иначе
		ПредупреждениеАсинх("Пакету не назначено место вывозки");
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВывезПакетПоЗаданию(ЭлементКартинки, СтрокаОписания)
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОткрытьСвойстваПакета(Команда)
	
	ЭлементКартинки = ПолучитьЭлементКартинкиПоКоманде(Команда);
	СтрокаОписания = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиенте(ЭлементКартинки.Имя, РядыЯчейки);
	
	Если СтрокаОписания = Неопределено Тогда
		СтрокаОписания = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиенте(ЭлементКартинки.Имя, ПакетыБезРядов);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ФормаПакета", Новый Структура("Пакет,ПоказатьКлавиатуру", СтрокаОписания.ПакетID, ЛОЖЬ));
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Функция ОпередитьРядПоЗаголовку(ЗаголовокРяда)
	Возврат Число(СтрЗаменить(ЗаголовокРяда, "Группа_Ряд", ""));
КонецФункции

&НаКлиенте
Асинх Процедура УдалитьРяд(Команда)
	Ответ = Ждать ВопросАсинх("Удалить текущий ряд?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ТекущийРяд = ОпередитьРядПоЗаголовку(ТекущийЭлемент.Родитель.Имя);
		
		//МассивНовыхРазмещений = Новый Массив;
		//Для Каждого стр из РядыЯчейки Цикл
		//	Если ЗначениеЗаполнено(стр.Пакет) Тогда
		//		Если стр.Ряд = НомерРядаУдаляемый Тогда 
		//			Если ЗначениеЗаполнено(стр.Пакет) Тогда
		//				МассивНовыхРазмещений.Добавить(Новый Структура("Пакет,Ячейка,Ряд,Уровень", стр.ПакетID, ВыбраннаяЯчейка, 0, 0));
		//			КонецЕсли;
		//		ИначеЕсли стр.Ряд > НомерРядаУдаляемый и НЕ ТолькоОчистить Тогда
		//			Если ЗначениеЗаполнено(стр.Пакет) Тогда
		//				МассивНовыхРазмещений.Добавить(Новый Структура("Пакет,Ячейка,Ряд,Уровень", стр.ПакетID, ВыбраннаяЯчейка, стр.Ряд-1, стр.Уровень));
		//			КонецЕсли;
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЦикла;
		
		УдалитьРядНаСервере(ТекущийРяд, ЛОЖЬ, ЕстьСвязь);
		
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура УдалитьРядНаСервере(НомерРядаУдаляемый, ТолькоОчистить = ЛОЖЬ, ЕстьСвязь)
	МассивНовыхРазмещений = Новый Массив;
	Для Каждого стр из РядыЯчейки Цикл
		Если ЗначениеЗаполнено(стр.Пакет) Тогда
			Если стр.Ряд = НомерРядаУдаляемый Тогда 
				Если ЗначениеЗаполнено(стр.Пакет) Тогда
					МассивНовыхРазмещений.Добавить(Новый Структура("Пакет,Ячейка,Ряд,Уровень", стр.ПакетID, ВыбраннаяЯчейка, 0, 0));
				КонецЕсли;
			ИначеЕсли стр.Ряд > НомерРядаУдаляемый и НЕ ТолькоОчистить Тогда
				Если ЗначениеЗаполнено(стр.Пакет) Тогда
					МассивНовыхРазмещений.Добавить(Новый Структура("Пакет,Ячейка,Ряд,Уровень", стр.ПакетID, ВыбраннаяЯчейка, стр.Ряд-1, стр.Уровень));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЯчейкиСклада.РазместитьМассивПакетовВЯчейке(МассивНовыхРазмещений, ЛОЖЬ, ЕстьСвязь);
	//ЗаполнениеЯчейкиНаСервере(ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура СтраницыРядовПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Неопределено Тогда 
		ТекущийРяд = 0;
	Иначе
		ИмяСтраницы = ТекущаяСтраница.Имя;
		ТекущийРяд = Число(СтрЗаменить(ИмяСтраницы, "Страницы_Ряд",""));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВоспроизвестиТекст(Текст, ОписаниеОповещенияПрервывния = НЕОПРЕДЕЛЕНО)
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда
		СредстваМультимедиа.ВоспроизвестиТекст(Текст, "ru-RU",,,,ИСТИНА);
	#КонецЕсли	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОбработкаРезультатаСканированияПакетовТекущегоРяда(Штрихкод, Результат, Сообщение, НомерРяда) Экспорт
	Если Результат = Неопределено Тогда Возврат КонецЕсли;
	СвойстваПакета = Пакеты_ВызовСервера.СвойстваПакетаМоб(Штрихкод);
	Если СвойстваПакета = Неопределено Тогда
		ВоспроизвестиТекст("Пакет "+Штрихкод+ " не найден");
		Возврат;
	Иначе
		НомерУровняГрупповогоСканирования = НомерУровняГрупповогоСканирования + 1;
		ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(СвойстваПакета.НомерПакета, ВыбраннаяЯчейка, НомерРяда, НомерУровняГрупповогоСканирования);
		Если ИспользоватьЗвуковойПомощник Тогда
			ВоспроизвестиТекст(""+Штрихкод+ " добавлен на уровень "+НомерУровняГрупповогоСканирования,1.2);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗадатьВопросНачатьСканированиеРяда(Команда)
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда
		ТекстВопроса = "Начать сканирование пакетов ряда?
		|Порядок сканирования  - СНИЗУ -> ВВЕРХ";
		Ответ = Ждать ВопросАсинх(ТекстВопроса,РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Если ИспользоватьЗвуковойПомощник Тогда
				ВоспроизвестиТекст("Сканируйте СНИЗУ ВВЕРХ");
			КонецЕсли;
			
			НачатьСканированиеРяда(Команда)	
		КонецЕсли;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура НачатьСканированиеРяда(Команда)
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда
		ОбработчикРезультата = Новый ОписаниеОповещения("ОбработкаРезультатаСканированияПакетовТекущегоРяда", ЭтотОбъект, ТекущийРяд);
		НомерУровняГрупповогоСканирования = 0;
		Пакеты_Клиент.НачатьСканирование1с(ОбработчикРезультата);
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДобавитьРядСправа(Команда) 
	
	Ответ = Ждать ВопросАсинх("Добавить ряд пакетов вглубь?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДобавитьРядНаСервере(ЛОЖЬ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораШтабеля()
	ДействиеПослеЗакрытияВыбораШтабеля = Новый ОписаниеОповещения("ДействиеПослеЗакрытияВыбораШтабеля", ЭтотОбъект);
	ОткрытьФорму("Справочник.Ячейки.Форма.ФормаВыбораСектора", Новый Структура("ВыбраныйШтабель", ВыбраннаяЯчейка), ЭтаФорма,,,,ДействиеПослеЗакрытияВыбораШтабеля, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
КонецПроцедуры

&НаКлиенте
Процедура ВыбраннаяЯчейкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	ОткрытьФормуВыбораШтабеля()
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПослеЗакрытияВыбораШтабеля(Результат, ДопПар) ЭКспорт
	Если Результат = Неопределено Тогда 
		Возврат
	КонецЕсли;
	
	ВыбраннаяЯчейка = Результат;
	ВыбраннаяЯчейкаПриИзменении("")
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДействияПакета(ЭлементПакета, МестоПакета = "ПакетВЯчейке", СтрокаТаблицы) Экспорт
	
	Если ТипЗнч(ЭлементПакета) = Тип("КнопкаФормы") Тогда
		ЭлементПакета.УстановитьДействие("Нажатие",	"ПакетНажатие");	
	Иначе
		ЭлементПакета.УстановитьДействие("Нажатие",	"ПакетНажатие");
	КонецЕсли;
	УстановитьКонтекстноеМенюПакета(ЭлементПакета, МестоПакета, СтрокаТаблицы) 	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКонтекстноеМенюПакета(ЭлементПакета, МестоПакета = "ПакетВЯчейке", СтрокаТаблицы) 
	Если МестоПакета = "ПакетВЯчейке" Тогда 
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Пакет) Тогда 
			
			ЯчейкиСклада.ДобавитьКомандуКонтекстногоМеню(ЭтотОбъект, Элементы, ЭлементПакета, "_ВыборПакета", "ПоказатьФормуВыбораПакета");
			
		Иначе
			
			Если ПолучитьФункциональнуюОпцию("ДоступПогрузчикБГП") и ЗначениеЗаполнено(СтрокаТаблицы.Назначение) Тогда
				ЯчейкиСклада.ДобавитьКомандуКонтекстногоМеню(ЭтотОбъект, Элементы, ЭлементПакета, "_ВывезПакет", "ВывезПакетИзЯчейкиПоЗаданию");
			КонецЕсли;
			
			ЯчейкиСклада.ДобавитьКомандуКонтекстногоМеню(ЭтотОбъект, Элементы, ЭлементПакета, "_ОткрытьСвойства", "ОткрытьСвойстваПакета");
			ЯчейкиСклада.ДобавитьКомандуКонтекстногоМеню(ЭтотОбъект, Элементы, ЭлементПакета, "_ЗабратьПакет", "ЗабратьПакетИзЯчейки");
			//ЯчейкиСклада.ДобавитьКомандуКонтекстногоМеню(ЭтотОбъект, Элементы, ЭлементПакета, "_УдалитьИзЯчейки", "Удалить");	
		КонецЕсли;
		
	ИначеЕсли МестоПакета = "ПакетыВил" Тогда 
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Пакет) Тогда 
			ЯчейкиСклада.ДобавитьКомандуКонтекстногоМеню(ЭтотОбъект, Элементы, ЭлементПакета, "_СброситьСВил", "СброситьСВил"); 
		КонецЕсли
		
	Иначе 
		
		ЯчейкиСклада.ДобавитьКомандуКонтекстногоМеню(ЭтотОбъект, Элементы, ЭлементПакета, "_УстановитьПакетЯчейку", "УстановитьПакетЯчейку"); 
		ЯчейкиСклада.ДобавитьКомандуКонтекстногоМеню(ЭтотОбъект, Элементы, ЭлементПакета, "_ОткрытьСвойства", "ОткрытьСвойстваПакета");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОстатки(Команда)
	
	Если Не ЕстьСвязь Тогда
		ОбщегоНазначенияКлиент.СообщитьОшибкуНетСвязи();
		Возврат;
	Иначе
		ОбновитьПакетыЯчейкиНаСервере(ВыбраннаяЯчейка);
		ВыбраннаяЯчейкаПриИзменении(Команда)	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПакетыЯчейкиНаСервере(мЯчейка)
	
	СлужебныйОбновление.ОбновитьОстаткиПакетовНаСкладе(мЯчейка);
	
КонецПроцедуры

&НаКлиенте
Асинх Функция ЗадатьВопросОчиститьШтабель(Ответ) 
	ТекстВопроса = 
	"Очистить полностью пакеты в штабеле?";
	
	Ответ = ЖДАТЬ ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Возврат Ответ;
КонецФункции

&НаКлиенте
Асинх Процедура ОчиститьШтабель(Команда) 
	
	Ответ = жДАТЬ ЗадатьВопросОчиститьШтабель(Ответ);
	//
	//ТекстВопроса = 
	//"Очистить полностью пакеты в штабеле?";
	//
	//Ответ = ЖДАТЬ ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		МассивРазмещений = Новый Массив;
		Для Каждого стр из РядыЯчейки Цикл
			Если ЗначениеЗаполнено(стр.Пакет) Тогда
				МассивРазмещений.Добавить(Новый Структура("Пакет,Ячейка,Ряд,Уровень", стр.ПакетID, ВыбраннаяЯчейка, 0, 0));
				//ЯчейкиСкладаВызовСервера.РазместитьПакетВЯчейке(стр.ПакетID, ВыбраннаяЯчейка, 0, 0, ЛОЖЬ, ЕстьСвязь);
			КонецЕсли;
		КонецЦикла;
		ЯчейкиСкладаКлиент.РазместитьПакетыВЯчейкеПУ(МассивРазмещений);
		//ЯчейкиСкладаВызовСервера.РазместитьМассивПакетовВЯчейке(МассивРазмещений);
	КонецЕсли;
	
		
КонецПроцедуры

&НаКлиенте
Процедура УбратьНеРаспределенные(Команда)
	УбратьНеРаспределенныеАсинх()	
КонецПроцедуры

&НаКлиенте
Асинх Процедура УбратьНеРаспределенныеАсинх()
	Ответ = Ждать ВопросАсинх("Удалить нераспределенные пакеты?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда  
		ПустаяЯчейка = ПредопределенноеЗначение("Справочник.Ячейки.ПустаяСсылка");
		Для Каждого стр из ПакетыБезРядов Цикл
			ЯчейкиСкладаКлиент.РазместитьПакетВЯчейкеКлиент(стр.ПакетID, ПустаяЯчейка, 0, 0, ЛОЖЬ);
		КонецЦикла; 
		НачатьЗаполнениеЯчейки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоменятьОриентациюНастроитьКнопку()
	Элементы.ПоменятьОриентацию.Картинка = ?(ОбратнаяОриентация, БиблиотекаКартинок.Обратный, БиблиотекаКартинок.Прямой);
КонецПроцедуры

&НаКлиенте
Процедура ПоменятьОриентацию(Команда)
	ОбратнаяОриентация = НЕ ОбратнаяОриентация;
	ПоменятьОриентациюНастроитьКнопку();
	НастроитьФорму();
КонецПроцедуры

 &НаКлиенте
 Асинх Процедура СброситьСВил(Команда) 
	 
	СтрокаОписанияТекЯчейки = ЯчейкиСкладаКлиент.ПолучитьСтрокуОписанияЭлементаФормыНаКлиенте(ТекущийЭлемент.Имя, ПакетыНаВилах);
	Если СтрокаОписанияТекЯчейки = Неопределено Тогда Возврат КонецЕсли;
	
	ТекстВопроса = "Убрать пакет "+СтрокаОписанияТекЯчейки.Пакет+" с вил?";
	РезультатОтвета = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		ЯчейкиСкладаВызовСервера.УбратьПакетСВил(СтрокаОписанияТекЯчейки.ПакетID);
		Оповестить("ИзмененыПакетыНаВилах");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьРядСВыборомНомера(Команда)
	ОповещениеПослеВыбораНомераРяда = Новый ОписаниеОповещения("ПродолжитьУдалениеРядаПакетов", ЭтотОбъект);
	ВыбратьУдаляемыйРяд(ОповещениеПослеВыбораНомераРяда);
КонецПроцедуры  

&НаКлиенте
Процедура ПродолжитьУдалениеРядаПакетов(УдаляемыйРяд, ДополнительныеПараметры) Экспорт
	Если Не УдаляемыйРяд = НЕОПРЕДЕЛЕНО и БУЛЕВО(УдаляемыйРяд.Значение)>0 Тогда
		УдалитьРядНаСервере(УдаляемыйРяд.Значение, ЛОЖЬ, ЕстьСвязь)
	КонецЕсли;
	Оповестить("ИзмененыПакетыНаВилах", Новый Структура("Пакет, Ячейка, Ряд, Уровень", НЕОПРЕДЕЛЕНО, ВыбраннаяЯчейка, 0, 0));
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьУдаляемыйРяд(ОповещениеПослеВыбораНомераРяда)
	перем УдаляемыйРяд;
	УдаляемыйРяд = 0;
	ВариантыРядов = Новый Соответствие;
	Для Каждого стр из РядыЯчейки Цикл 
		ВариантыРядов.Вставить(стр.Ряд);
	КонецЦикла;
	
	мСписокВыбора = Новый СписокЗначений;
	Для Каждого м из ВариантыРядов Цикл
		СтрокиРяда = РядыЯчейки.НайтиСтроки(Новый Структура("Ряд", м.Ключ));
		МассивПакетов = Новый Массив;
		Для Каждого стр из СтрокиРяда Цикл
			Если ЗначениеЗаполнено(стр.Пакет) Тогда
				МассивПакетов.Добавить(стр.Пакет);	
			КонецЕсли;
		КонецЦикла;
		мСписокВыбора.Добавить(м.Ключ, СтрШаблон("Ряд%1", м.ключ) + " ("+СтрСоединить(МассивПакетов,";")+")");
	КонецЦикла;
	мСписокВыбора.СортироватьПоЗначению(НаправлениеСортировки.Возр);
	
	Если Элементы.СтраницыРядов.ТекущаяСтраница <> Неопределено и Элементы.СтраницыРядов.ТекущаяСтраница.ПодчиненныеЭлементы.Количество()>0 Тогда
		ЭлементПоказа = Элементы.СтраницыРядов.ТекущаяСтраница.ПодчиненныеЭлементы[0];
		ПоказатьВыборИзСписка(ОповещениеПослеВыбораНомераРяда,мСписокВыбора, ЭлементПоказа); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПакетыБезРядовСменитьСтраницу(Добавить = ИСТИНА)
	ТекущаяСтраница = Элементы.ПакетыБезРядов.ТекущаяСтраница;
	Если НЕ ТекущаяСтраница = Неопределено Тогда
		НомерТекущей = Число(СтрЗаменить(ТекущаяСтраница.Имя, "ПакетыБезРядов_Ряд", "")); 
		Если Добавить Тогда
			НовыйНомер = НомерТекущей + 1;
		Иначе
			НовыйНомер = НомерТекущей - 1;
		КонецЕсли;
		ИмяНовойТекущей = "ПакетыБезРядов_Ряд"+Формат(НовыйНомер, "ЧГ=0");
		НоваяТекущая = Элементы.Найти(ИмяНовойТекущей);
		Если НЕ НоваяТекущая = Неопределено Тогда
			Элементы.ПакетыБезРядов.ТекущаяСтраница = НоваяТекущая;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПакетыБезРядовРядМинус(Команда)
	ПакетыБезРядовСменитьСтраницу(ЛОЖЬ)	
КонецПроцедуры

&НаКлиенте
Процедура ПакетыБезРядовРядПлюс(Команда)
	ПакетыБезРядовСменитьСтраницу(ИСТИНА)
КонецПроцедуры

&НаКлиенте
Процедура СменитьШтабель(Команда)
	ОткрытьФормуВыбораШтабеля()
КонецПроцедуры

&НаКлиенте
Процедура ПустаяКоманда(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Оповестить("ИзмененыПакетыНаВилах","ЗакрытиеФормы", ЭтаФорма)
КонецПроцедуры
