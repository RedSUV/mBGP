Процедура УстановитьСтилиДекорации(Элементы, Знач элФормы, СтруктураСтиля) Экспорт
	Если ТипЗнч(элФормы) = Тип("Строка") Тогда 
		элФормы = Элементы.Найти(элФормы);
	КонецЕсли;
	Для Каждого ОписаниеСтиля из СтруктураСтиля Цикл
		элФормы[ОписаниеСтиля.Ключ] = ОписаниеСтиля.Значение;		
	КонецЦикла;
КонецПроцедуры

Процедура ОткрытьФормуВыбораПакета(ФормаВладелец, ОповещениеПослеВыбора, Пакет) Экспорт
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("РежимВыбора", ИСТИНА);
	ПараметрыОткрытияФормы.Вставить("Пакет", Пакет);
	
	ОткрытьФорму("ОбщаяФорма.ФормаПакета", ПараметрыОткрытияФормы, ФормаВладелец,,,,ОповещениеПослеВыбора, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры  

Функция ПолучитьДанныеФотоСнимка(РазрешениеКамеры = Неопределено, пКачество = 20, ДобавитьДату = ЛОЖЬ) Экспорт
	
	Данные = Неопределено;
	
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда 
		
		Если СредстваМультимедиа.ПоддерживаетсяФотоснимок() Тогда
			
			Если ДобавитьДату Тогда
				ОтметкаНаФото = Новый ОтметкаНаФотоснимке;
				ОтметкаНаФото.ОтметкаДаты = Истина;
			Иначе
				ОтметкаНаФото = Неопределено;
			КонецЕсли;

			Данные = СредстваМультимедиа.СделатьФотоснимок(ТипКамерыУстройства.Задняя, РазрешениеКамеры, пКачество,,, ОтметкаНаФото); 
			
			Возврат Данные; 
		Иначе 
			Сообщить("Данное устройство не поддерживает фотоснимок!") 
		КонецЕсли; 
		
	#КонецЕсли
	
	Возврат Данные;
	
КонецФункции  

Процедура СообщитьОшибкуНетСвязи() Экспорт
	Сообщить("Действие невозможно по причине отсутствия связи");
КонецПроцедуры

Функция СтрокаБезСпецСимволов(Стр) Экспорт
	СтрокаНеДоступныхСимволов = ". /()%;!""'#@&*!`~+-|\:^$№?";
	Возврат СтрСоединить(СтрРазделить(Стр, СтрокаНеДоступныхСимволов));
КонецФункции

Асинх Процедура ЗапускСкачиванияУстановкиОбновления(АдресФайла) Экспорт
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда  
		Нов = Новый ЗапускПриложенияМобильногоУстройства("android.intent.action.VIEW");
		Нов.Данные = АдресФайла;
		//Нов.Тип = "application/vnd.android.package-archive";
		Нов.Запустить(ИСТИНА);
	#Иначе
		ЗапуститьПриложениеАсинх(АдресФайла,,ЛОЖЬ);
	#КонецЕсли
КонецПроцедуры

Асинх Функция СкачатьФайлОбновления(АдресФайла)
	ПутьКЗагруженнымФайлам = КаталогДокументов();

	АдресОбновлений = ОбщегоНазначенияВызовСервераПовтИсп.АдресОбновлений();
	
	РазлАдрес = http_ВызовСервера.РазобратьАдрес(АдресОбновлений);
	
	Соединение = Новый HTTPСоединение(РазлАдрес.Сервер,,,,,,?(РазлАдрес.ЗащищенноеСоединение, Новый ЗащищенноеСоединениеOpenSSL, НЕОПРЕДЕЛЕНО));
	Результат = Соединение.ВызватьHTTPМетод("GET", Новый HTTPЗапрос(АдресФайла), ПутьКЗагруженнымФайлам+"/"+АдресФайла);
	
	Возврат ИСТИНА;
КонецФункции

Асинх Процедура СкачатьУстановитьОбновления(АдресФайла) Экспорт
	АдресОбновлений = ОбщегоНазначенияВызовСервераПовтИсп.АдресОбновлений();
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда 
		ПутьКЗагруженнымФайлам = КаталогДокументов();
		
		Результат = Ждать СкачатьФайлОбновления(АдресФайла);
		Если Результат = ИСТИНА Тогда
			
			Нов = Новый ЗапускПриложенияМобильногоУстройства("android.intent.action.VIEW");
			Нов.Данные = ПутьКЗагруженнымФайлам+"/"+АдресФайла;
			Нов.Тип = "application/vnd.android.package-archive";
			Нов.Запустить(ИСТИНА);
		КонецЕсли;	
	#Иначе
		ЗапуститьПриложениеАсинх(АдресОбновлений+АдресФайла,,ЛОЖЬ);
	#КонецЕсли
КонецПроцедуры

Процедура НастроитьГруппуКнопокВыбораСтраниц(ЭлементФормыГруппаСтраниц, СоответствиеСтраницыКнопкам, ОформленияКнопок = Неопределено) Экспорт
	Если ОформленияКнопок = Неопределено Тогда
		ОформленияКнопок = ОформлениеКнопокПереключенияСтраниц();	
	КонецЕсли;
	
	Для Каждого м из СоответствиеСтраницыКнопкам Цикл
		Если м.Значение = ЭлементФормыГруппаСтраниц.ТекущаяСтраница Тогда
			м.Ключ.Шрифт		 = ОформленияКнопок.АктивныйШрифт;
			м.Ключ.ЦветТекста	 = ОформленияКнопок.АктивныйЦветТекста;
		Иначе
			м.Ключ.Шрифт		 = ОформленияКнопок.НеактивныйШрифт;
			м.Ключ.ЦветТекста	 = ОформленияКнопок.НеактивныйЦветТекста;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ОформлениеКнопокПереключенияСтраниц() Экспорт
	СтруктураОформления = Новый Структура;
	#Если МобильноеПриложениеКлиент Или МобильныйКлиент Тогда
		СтруктураОформления.Вставить("НеактивныйШрифт",	 Новый Шрифт(ОбщегоНазначенияВызовСервераПовтИсп.ОбычнийШрифт(), , 2, ЛОЖЬ,	 , ЛОЖЬ));
		СтруктураОформления.Вставить("АктивныйШрифт",	 Новый Шрифт(ОбщегоНазначенияВызовСервераПовтИсп.ОбычнийШрифт(), , 2, ИСТИНА, , ИСТИНА));
	#Иначе
		СтруктураОформления.Вставить("НеактивныйШрифт",	 Новый Шрифт(ОбщегоНазначенияВызовСервераПовтИсп.ОбычнийШрифт(),, , ЛОЖЬ,	 , ЛОЖЬ));
		СтруктураОформления.Вставить("АктивныйШрифт",	 Новый Шрифт(ОбщегоНазначенияВызовСервераПовтИсп.ОбычнийШрифт(),, , ИСТИНА, , ИСТИНА));
	#КонецЕсли
	
	СтруктураОформления.Вставить("НеактивныйЦветТекста", WebЦвета.ТемноСерый);
	СтруктураОформления.Вставить("АктивныйЦветТекста",	 WebЦвета.ТемноЗеленый);
	
	Возврат СтруктураОформления;
КонецФункции

Функция ЭтоПортретныйРежимЭкрана(ДанныеЭкрана = НЕОПРЕДЕЛЕНО) Экспорт
	Если ДанныеЭкрана = НЕОПРЕДЕЛЕНО Тогда
		ДанныеЭкрана = ПолучитьИнформациюЭкрановКлиента();
	КонецЕсли;
	Возврат ДанныеЭкрана[0].Ширина < ДанныеЭкрана[0].Высота
КонецФункции 

Процедура ЗаполнитьСвойстваФормыПриИзмененииПараметровЭкрана(Форма) Экспорт
	ДанныеЭкрана = ПолучитьИнформациюЭкрановКлиента();
	м = Новый Структура;
	м.Вставить("ШиринаЭкрана", ДанныеЭкрана[0].Ширина);
	м.Вставить("ГоризонтальноеПоложениеЭкрана", ДанныеЭкрана[0].Ширина > ДанныеЭкрана[0].Высота);
	
	ЗаполнитьЗначенияСвойств(Форма,м);
КонецПроцедуры

Асинх Функция ПолучитьКаталогСохраненияФото() Экспорт
	КаталогДокументов = Ждать КаталогДокументовАсинх();
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда
		Каталог = СтрЗаменить(КаталогДокументов, "com.e1c.mobile", "com.vlp.mBGP"); 
		Каталог = КаталогДокументов;
	#Иначе 
		Каталог = КаталогДокументов+"\mBGP\";
	#КонецЕсли
	Возврат Каталог;
КонецФункции

Асинх Процедура СохранитьКартинкуВГалереюАсинх(ДвоичныеДанныеКартинки, ИмяФайла, Знач ПодКаталог = НЕОПРЕДЕЛЕНО) Экспорт
	КаталогФайлов = Ждать ПолучитьКаталогСохраненияФото();	
	Результат = Ждать ДвоичныеДанныеКартинки.ЗаписатьАсинх(КаталогФайлов + ИмяФайла);
	ФайлыКаталога = Ждать НайтиФайлыАсинх(КаталогФайлов); 
	//Сообщить(ФайлыКаталога.Количество())
КонецПроцедуры
