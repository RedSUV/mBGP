Функция ЗаписатьВСтрокуJSON(ДанныеДляТелаЗапроса) Экспорт
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(Новый ПараметрыЗаписиJSON);
	СериализаторXDTO.ЗаписатьJSON(Запись, ДанныеДляТелаЗапроса, НазначениеТипаXML.Явное);
	ТелоСтроки = Запись.Закрыть();
	
	Возврат ТелоСтроки;
КонецФункции

Функция ПрочитатьДанныеJSONизСтроки(СтрокаJSON) Экспорт
	Если Не ЗначениеЗаполнено(СтрокаJSON) Тогда
		Возврат НЕОПРЕДЕЛЕНО
	КонецЕсли;
	
	Чтение = Новый ЧтениеJSON; 
	Чтение.УстановитьСтроку(СтрокаJSON);
	Данные = СериализаторXDTO.ПрочитатьJSON(Чтение);
	Возврат Данные;
КонецФункции

Функция ТипКодировки(ЗапросОтвет = Неопределено) Экспорт
	КодировкаУмолч = "utf-8";
	Если ЗапросОтвет = Неопределено Тогда Возврат КодировкаУмолч КонецЕсли;
	
	ОписаниеКодировки = ЗапросОтвет.Заголовки.Получить("Content-Type");
	Если ОписаниеКодировки = Неопределено Тогда
		Возврат КодировкаУмолч;
	Иначе
		м_Content_Type = СтрРазделить(ОписаниеКодировки, ";");
		Для Каждого м из м_Content_Type Цикл
			т = СокрЛП(м);
			Если Лев(т, 7) = "charset" Тогда
				Возврат Сред(т, 9);
			КонецЕсли;
		КонецЦикла;
		Возврат КодировкаУмолч	
	КонецЕсли;
КонецФункции

Функция ВыполнитьЗапрос(АдресЗапроса, Метод, Заголовки = Неопределено, ТелоЗапроса = Неопределено, ИмяСобытияЖурнала = "", Соединение = Неопределено) Экспорт
	Перем ДанныеАвторизации;
	
	ДанныеАвторизации = Новый Структура;
	Для Каждого м из http_ПовтИсп.ДанныеАвторизации() Цикл
		ДанныеАвторизации.Вставить(м.Ключ, м.Значение);	
	КонецЦикла;

	//УКО выполняется под служебным пользователем
	ДанныеАвторизации.Вставить("Логин",	 ДанныеАвторизации.Путь.ЛогинСлужебный);
	ДанныеАвторизации.Вставить("Пароль", ДанныеАвторизации.Путь.ПарольСлужебный);
	//------------------------------------------->
	Если Соединение = Неопределено Тогда
		Если ОбщегоНазначенияВызовСервераПовтИсп.БазаПУ().ЭтоERP Тогда
			Соединение = http.СоединениеПУ(http.СвойстваСоединения(ДанныеАвторизации), 30);
		Иначе
			Соединение = http.СоединениеПУ(http.СвойстваСоединения(ДанныеАвторизации)); 
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщегоНазначенияВызовСервераПовтИсп.БазаПУ().ЭтоERP Тогда
		Запрос = http.НовыйЗапросПУ("/hs/exchange_vlp/" + АдресЗапроса, ДанныеАвторизации.Логин, Заголовки);
	Иначе
		Запрос = http.НовыйЗапросПУ("/hs/exchange/" + АдресЗапроса, ДанныеАвторизации.Логин, Заголовки);
	КонецЕсли;
	
	Если ТелоЗапроса <> Неопределено Тогда
		Если ТипЗнч(ТелоЗапроса) = Тип("Строка") Тогда
			Запрос.УстановитьТелоИзСтроки(ТелоЗапроса, ТипКодировки(Запрос));
		Иначе
			Запрос.УстановитьТелоИзСтроки(ЗаписатьВСтрокуJSON(ТелоЗапроса));
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		Ответ = Соединение.ВызватьHTTPМетод(Метод, Запрос);
	Исключение
		ЗаписьИстории(?(ИмяСобытияЖурнала="",АдресЗапроса,ИмяСобытияЖурнала), Ответ.ПолучитьТелоКакСтроку(),ИСТИНА);
		Возврат Неопределено;
	КонецПопытки;
	
	Если Ответ.КодСостояния = 200 Тогда
		Возврат ПолучитьДанныеОтветаСервера(Запрос, Метод, Ответ);
	Иначе
		ЗаписьИстории(?(ИмяСобытияЖурнала="",АдресЗапроса,ИмяСобытияЖурнала), Ответ.ПолучитьТелоКакСтроку(), ИСТИНА);
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПрочитатьСтрокуТелаОтвета(ОтветСервера)
	Кодировка = ТипКодировки(ОтветСервера);
	Возврат ОтветСервера.ПолучитьТелоКакСтроку(Кодировка)
КонецФункции

Функция ПолучитьДанныеОтветаСервера(Запрос, Метод, ОтветСервера) Экспорт
	ЗаголовкиОтвета = ОтветСервера.Заголовки;
	СтрокаТела = ПрочитатьСтрокуТелаОтвета(ОтветСервера);

	ContentType = ЗаголовкиОтвета.Получить("Content-Type");
	Если НЕ ContentType = Неопределено Тогда
		Если СтрНайти(ContentType, "json") > 0 Тогда
			ТипОтвета = ЗаголовкиОтвета.Получить("Accept-Encoding");
			Если ТипОтвета = НЕОПРЕДЕЛЕНО Тогда
				ТипОтвета = "json";	
			ИначеЕсли ТипОтвета = "zip" или ТипОтвета = "qzip" Тогда
				СтрокаТела = XMLЗначение(Тип("ХранилищеЗначения"), СтрокаТела).Получить()	
			КонецЕсли;
			
			ДанныеОтвета = ПрочитатьДанныеJSONизСтроки(СтрокаТела);
			
			Возврат ДанныеОтвета;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНайти(СтрокаТела, "<html>") = 0 Тогда
		СтрокаТела = "<html><head></head><body><pre style=""word-wrap: break-word; white-space: pre-wrap;"">"+СтрокаТела+"</pre></body></html>"
	КонецЕсли;
	Возврат СтрокаТела;
КонецФункции

Функция НоваяСтруктураПроизвольногоЗапроса() Экспорт
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("ТекстЗапроса", "");
	СтруктураЗапроса.Вставить("ПараметрыЗапроса", Новый Структура());
	Возврат СтруктураЗапроса;
КонецФункции

Функция ПолучитьДанныеПроизвольногоЗапроса(СтруктураЗапроса, ДопЗаголовки = НЕОПРЕДЕЛЕНО, ИмяСобытияЖурнала = "", ВернутьМассив = ЛОЖЬ, Знач Соединение = Неопределено) Экспорт
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "charset="+ТипКодировки());
	Если Не ДопЗаголовки = Неопределено Тогда
		Для Каждого эл из ДопЗаголовки Цикл
			Заголовки.Вставить(Эл.Ключ, Эл.Значение);	
		КонецЦикла;
	КонецЕсли;
	Заголовки.Вставить("Accept-Encoding", "zip");
	
	ДанныеПУ = УКО.ВыполнитьЗапрос("random_query","POST", Заголовки, СтруктураЗапроса, ИмяСобытияЖурнала, Соединение);  
	Если ВернутьМассив Тогда 
		ДанныеПУ = ОбщегоНазначения.ТаблицаЗначенийВМассив(ДанныеПУ);
	КонецЕсли;
	
	Возврат ДанныеПУ;
КонецФункции

Функция ВыполнитьФункциюПУ(Заголовки = Неопределено, ТелоЗапроса = Неопределено, ИмяСобытияЖурнала = "", ПисатьПолныйЛОг = ЛОЖЬ) Экспорт
	Перем ДанныеАвторизации;
	
	ДанныеАвторизации = Новый Структура;
	Для Каждого м из http_ПовтИсп.ДанныеАвторизации() Цикл
		ДанныеАвторизации.Вставить(м.Ключ, м.Значение);	
	КонецЦикла;

	//УКО выполняется под служебным пользователем
	ДанныеАвторизации.Вставить("Логин",	 ДанныеАвторизации.Путь.ЛогинСлужебный);
	ДанныеАвторизации.Вставить("Пароль", ДанныеАвторизации.Путь.ПарольСлужебный);
	//------------------------------------------->
	
	Соединение = http.СоединениеПУ(http.СвойстваСоединения(ДанныеАвторизации)); 
	
	Если ОбщегоНазначенияВызовСервераПовтИсп.БазаПУ().ЭтоERP Тогда
		Запрос = http.НовыйЗапросПУ("/hs/exchange_vlp/random_function", ДанныеАвторизации.Логин, Заголовки);
	Иначе
		Запрос = http.НовыйЗапросПУ("/hs/exchange/random_function", ДанныеАвторизации.Логин, Заголовки);
	КонецЕсли;
	
	Запрос.УстановитьТелоИзСтроки(ЗаписатьВСтрокуJSON(ТелоЗапроса), ТипКодировки(Запрос));
	
	Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос);
	
	Если Ответ.КодСостояния = 200 Тогда
		Возврат ИСТИНА;
	Иначе
		ЗаписьИстории(?(ИмяСобытияЖурнала="", "random_function", ИмяСобытияЖурнала), ТелоЗапроса, ИСТИНА);
		Возврат ЛОЖЬ;
	КонецЕсли;
КонецФункции

