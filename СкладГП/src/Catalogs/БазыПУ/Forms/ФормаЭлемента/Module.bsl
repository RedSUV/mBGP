
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отказ = НЕ Параметры.ДоступЕсть;
	ТолькоПросмотр = ЗначениеЗаполнено(Объект.ИмяПредопределенныхДанных);
	ОбновитьДоступностьСозданияСкладов();
КонецПроцедуры  

&НаСервере
Процедура ОбновитьДоступностьСозданияСкладов()
	Если ЗначениеЗаполнено(Объект.ИмяПредопределенныхДанных) Тогда
		Элементы.СоздатьВспомогательныйСклад.Видимость = ЛОЖЬ;
		Элементы.СоздатьОсновнойСклад.Видимость = ЛОЖЬ;
	Иначе
		Элементы.СоздатьВспомогательныйСклад.Видимость	 = НЕ ЗначениеЗаполнено(Склад_Вспомогательный);
		Элементы.СоздатьОсновнойСклад.Видимость			 = НЕ ЗначениеЗаполнено(Склад_Основной);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСклады()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Склады.Ссылка КАК Ссылка,
	|	Склады.ИмяПредопределенногоПУ КАК ИмяПредопределенногоПУ,
	|	Склады.ВспомогательныйСклад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Вспомогательный
	|ПОМЕСТИТЬ м1
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Владелец = &Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	м1.Ссылка КАК Вспомогательный,
	|	м11.Ссылка КАК Основной
	|ИЗ
	|	м1 КАК м1,
	|	м1 КАК м11
	|ГДЕ
	|	м1.Вспомогательный = ИСТИНА
	|	И м11.Вспомогательный = ЛОЖЬ"; 
	Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Склад_Основной = Выборка.Основной;
		Склад_Вспомогательный = Выборка.Вспомогательный;
	Иначе
		Склад_Основной = Неопределено;
		Склад_Вспомогательный = Неопределено
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПослеЗаписиСклада(Результат, ИмяРеквизитаФормы) Экспорт
	ЭтаФорма[ИмяРеквизитаФормы] = Результат;
	ПрочитатьСклады()
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОсновнойСклад(Команда)
	Если Модифицированность Тогда
		Сообщить("Вначале запишите ИБ");
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Владелец", Объект.Ссылка);
	
	ОбработкаПосле = Новый ОписаниеОповещения("ОбработкаПослеЗаписиСклада", ЭтотОбъект, "Склад_Основной");
	ОткрытьФорму("Справочник.Склады.Форма.ФормаЭлемента", Новый Структура("ДанныеЗаполнения", ДанныеЗаполнения), ЭтаФорма,,,,ОбработкаПосле);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВспомогательныйСклад(Команда)
	Если Модифицированность Тогда
		Сообщить("Вначале запишите ИБ");
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Владелец", Объект.Ссылка);
	
	ОбработкаПосле = Новый ОписаниеОповещения("ОбработкаПослеЗаписиСклада", ЭтотОбъект, "Склад_Вспомогательный");
	ОткрытьФорму("Справочник.Склады.Форма.ФормаЭлемента", Новый Структура("ДанныеЗаполнения", ДанныеЗаполнения), ЭтаФорма,,,,ОбработкаПосле);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПрочитатьСклады()
КонецПроцедуры

&НаКлиенте
Асинх Процедура СоздатьКопиюБазы(Команда)
	Если Ждать ПроверитьПароль() Тогда
		ОткрытьФорму("Справочник.БазыПУ.Форма.ФормаЭлемента", Новый Структура("ДанныеЗаполнения", Объект.Ссылка));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Функция ПроверитьПароль()
	Пароль = "";
	Пароль = Ждать ВвестиСтрокуАсинх(Пароль,"Введите пароль доступа", 20, ЛОЖЬ);
	Возврат Пароль = "475000"
КонецФункции