
&НаКлиенте
Процедура СтильОформленияНочьПриИзменении(Элемент)
	//УстановитьПараметрСеансаНочь(СтильОформленияНочь = 1);
	//Оповестить("ИзмененВидИнтерфейса");
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрСеансаНочь()
	ПараметрыСеанса.ВидИнтерфейсаНочь = Булево(СтильОформленияНочь);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НастроитьТемуИнтерфейса();
	
	Если ПараметрыСеанса.ВидИнтерфейсаНочь Тогда
		СтильОформленияНочь = 1	
	КонецЕсли;
	ОтключитьЗаписьТрека = Константы.ОтключитьЗаписьТрека.Получить();
	ПериодичностьПолученияОстатковСклада = Константы.ПериодичностьПолученияОстатковСклада.Получить();
	ПериодичностьВыгрузкиИзменений = Константы.ПериодичностьВыгрузкиИзменений.Получить();
	ДатаВремяНаФотоПогрузки = Константы.ДобавлятьДатуВремяНаФотоЗаявкиНаПогрузку.Получить();
	ИспользоватьЗвуковойПомощник = Константы.ИспользоватьЗвуковойПомощник.Получить();
	
	ШтрихКод2D = ОбщегоНазначенияВызовСервераПовтИсп.ШтрихКод2D();
	СканированиеСтороннимПриложением = ОбщегоНазначенияВызовСервераПовтИсп.СканированиеСтороннимПриложением();
КонецПроцедуры

&НаСервере
Процедура НастроитьТемуИнтерфейса()
	//СтилиФорм.НастроитьТемуИнтерфейса(ЭтотОбъект)	
КонецПроцедуры

&НаСервере
Процедура ПрименитьНаСервере()
	УстановитьПараметрСеансаНочь();
	Константы.ПериодичностьВыгрузкиИзменений.Установить(ПериодичностьВыгрузкиИзменений);
	Константы.ПериодичностьПолученияОстатковСклада.Установить(ПериодичностьПолученияОстатковСклада);
	Константы.ИспользоватьЗвуковойПомощник.Установить(ИспользоватьЗвуковойПомощник);
	Константы.ШтрихКод2D.Установить(ШтрихКод2D);
	Константы.СканированиеСтороннимПриложением.Установить(СканированиеСтороннимПриложением);
	Константы.ОтключитьЗаписьТрека.Установить(ОтключитьЗаписьТрека);
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	ПрименитьНаСервере();
	ОбновитьПовторноИспользуемыеЗначения();
	Оповестить("ИзмененВидИнтерфейса");
	Оповестить("ИзменениеПериодичностиОбменов");
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененВидИнтерфейса" Тогда
		НастроитьТемуИнтерфейса();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыПродукции(Команда)
	ОткрытьФорму("Справочник.ВидыПродукции.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСорта(Команда)
	ОткрытьФорму("Справочник.Сорта.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТипыРаспила(Команда)
	ОткрытьФорму("Справочник.ТипыРаспила.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВлажности(Команда)
	ОткрытьФорму("Справочник.Влажности.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСлужебныеСправочники(Команда)
	ОбновитьСлужебныеСправочникиНаСервере();
	Элементы.ДекорацияСостоянияОбновления.Заголовок = "обновление закончено";
КонецПроцедуры

&НаСервере
Процедура ОбновитьСлужебныеСправочникиНаСервере()
	СлужебныйОбновление.ОбновитьСлужебныеСправочники(ЛОЖЬ);
	СлужебныйОбновление.НачатьОбменИзменениями(1000);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОбменятсяИзменениями(Команда)               
	СлужебныйОбновлениеКлиент.ОбменятьсяИзменениями();
КонецПроцедуры

&НаСервере
Процедура ПолучитьОстаткиСкладаНаСервере()
	СлужебныйОбновление.ОбновитьОстаткиПакетовНаСкладе();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьОстаткиСклада(Команда)
	ПолучитьОстаткиСкладаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗвуковойПомощникПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьИсториюРаботы(Команда)
	ОткрытьФорму("РегистрСведений.ИсторияРаботы.Форма.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПакета(Команда)
	ОткрытьФорму("ОбщаяФорма.НастройкаШаблонаОписанияПакета");
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	ОбщегоНазначенияКлиент.ЗаполнитьСвойстваФормыПриИзмененииПараметровЭкрана(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДатаВремяНаФотоПогрузкиПриИзменении(Элемент)
	УстановитьЗначениеКонстанты("ДобавлятьДатуВремяНаФотоЗаявкиНаПогрузку", ДатаВремяНаФотоПогрузки);	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьЗначениеКонстанты(ИмяКонстанты, ЗначениеКонстанты)
	Константы[ИмяКонстанты].Установить(ЗначениеКонстанты);
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры 

&НаКлиенте
Процедура ОчиститьДанные(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаОчисткиДанных",, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПоискОбновленийИзФормы(Команда)
	ВыполнитьПоискОбновлений();
КонецПроцедуры

&НаКлиенте
Процедура СписокБаз(Команда)
	ОткрытьФорму("Справочник.БазыПУ.Форма.ФормаСписка");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодготовитьСписокКоординатТрека()
	СписокКоординат = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТекущийТрек.Дата КАК Дата,
	|	ТекущийТрек.ТекущееМестоположение КАК ТекущееМестоположение,
	|	ТекущийТрек.Скорость КАК Скорость
	|ИЗ
	|	РегистрСведений.ТекущийТрек КАК ТекущийТрек";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		РазлКоорд = СтрРазделить(Выборка.ТекущееМестоположение,", ", ЛОЖЬ);
		Коорд = Новый ГеографическиеКоординаты(Число(РазлКоорд[0]+"."+РазлКоорд[1]),Число(РазлКоорд[2]+"."+РазлКоорд[3]));
		СписокКоординат.Добавить(Коорд);
	КонецЦикла;
	Возврат СписокКоординат;
КонецФункции

&НаКлиенте
Процедура ПоказатьТекущийТрек(Команда)
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда
		ПоказатьНаКарте(ПодготовитьСписокКоординатТрека());	
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	#Если МобильноеПриложениеКлиент или МобильныйКлиент Тогда
		Если ПоддерживаетсяОтображениеКарты() Тогда
			Элементы.ПоказатьТекущийТрек.Видимость = ИСТИНА;
		Иначе
			Элементы.ПоказатьТекущийТрек.Видимость = ЛОЖЬ;
		КонецЕсли;
	#КонецЕсли 
КонецПроцедуры



