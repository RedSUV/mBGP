
&НаКлиенте
Процедура НачатьСканирование(Команда)
	 #Если МобильноеПриложениеКлиент или МобильныйКлиент  Тогда    
		 ОбработчикСканирования = Новый ОписаниеОповещения("ОбработкаРезультатаСканированияШтрихКодаПакета", ЭтотОбъект);  
		 СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Наведите камеру на штрихкод", ОбработчикСканирования,, ТипШтрихКода.Двухмерный);// ТипШтрихКода.Линейный);   
	 #КонецЕсли			
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	ЭтаФорма.Закрыть(Пакет);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("РежимВыбора") Тогда
		Элементы.Выбрать.Видимость = Параметры.РежимВыбора;
		Заголовок = ?(Параметры.РежимВыбора, "Выбор пакета", "Поиск пакета");
	Иначе
		Элементы.Выбрать.Видимость = ЛОЖЬ;
	КонецЕсли;
	Если Параметры.Свойство("ПоказатьКлавиатуру") Тогда
		Элементы.ГруппаКлавиатуры.Видимость = Параметры.ПоказатьКлавиатуру;
		Элементы.НачатьСканирование.Видимость = Параметры.ПоказатьКлавиатуру;
		Заголовок = ?(Параметры.ПоказатьКлавиатуру, "Выбор пакета", "Свойства пакета");
	Иначе
		Элементы.ГруппаКлавиатуры.Видимость = ИСТИНА;
		Элементы.НачатьСканирование.Видимость = ИСТИНА;
	КонецЕсли;
	
	Если Параметры.Свойство("Пакет") Тогда
		ОбработкаРезультатаСканированияШтрихКодаПакетаНаСервере(Параметры.Пакет)	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьВыбораПакета() Экспорт
	Элементы.Выбрать.Доступность = ЗначениеЗаполнено(Пакет);
	Элементы.ИзменитьРасположение.Доступность = ЗначениеЗаполнено(Пакет);
	Элементы.ОтметкаПовреждения.Доступность = ЗначениеЗаполнено(Пакет);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия  = "ИзменениеРазмещенияПакета" Тогда
		Если ТипЗнч(Параметр) = Тип("Структура") Тогда
			Если Параметр.Свойство("Пакет") и Параметр.Пакет = Пакет Тогда 
				ОбработкаРезультатаСканированияШтрихКодаПакетаНаСервере(Пакет)
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзменениеКачестваСвязи" Тогда
		
		ПоявиласьСвязь =  Булево(Параметр);
		
	КонецЕсли;

КонецПроцедуры


//Функция СоотвествиеСвойствПакетаРеквизитамФормы
//Ключ - Имя реквизита формы
//Значение - Имя реквизита выборки
&НаСервере
Функция СоотвествиеСвойствПакетаРеквизитамФормы()
	Соотв = Новый Соответствие;
	//Соотв.Вставить("НомерПакета","Номер");
	Соотв.Вставить("Пакет","НомерПакета");
	Соотв.Вставить("Сечение","Сечение");
	Соотв.Вставить("Сорт", "Сорт");
	Соотв.Вставить("Порода", "Порода");
	Соотв.Вставить("ТипРаспила","ТипРаспила");
	Соотв.Вставить("ВидПродукции","ВидПродукции");
	Соотв.Вставить("Влажность","Влажность");
	Соотв.Вставить("Длина","ДлинаТ");
	Соотв.Вставить("Объем","Объем");
	Соотв.Вставить("КоличествоШтук","Досок"); 
	Соотв.Вставить("Ячейка","Ячейка"); 
	Соотв.Вставить("Ряд","Ряд"); 
	Соотв.Вставить("Уровень","Уровень"); 
	Соотв.Вставить("Адрес","Адрес");
	Возврат Соотв;
КонецФункции

&НаСервере
Функция ОбработкаРезультатаСканированияШтрихКодаПакетаНаСервере(Штрихкод)
	Перем СвойстваПакета;
	Если ЗначениеЗаполнено(Штрихкод) Тогда
		СвойстваПакета = Пакеты.СвойстваПакетаМоб(Штрихкод);   
	КонецЕсли;
	
	СоотвРекв = СоотвествиеСвойствПакетаРеквизитамФормы();
	Если СвойстваПакета = Неопределено Тогда
		Для Каждого м из СоотвРекв Цикл
			ЭтаФорма[м.Ключ] = НЕОПРЕДЕЛЕНО;
		КонецЦикла; 
		ПакетНашли = ЛОЖЬ;
		Возврат ЛОЖЬ
	Иначе
		Для Каждого м из СоотвРекв Цикл
			ЭтаФорма[м.Ключ] = СвойстваПакета[м.Значение];
		КонецЦикла; 
		Если ТипЗнч(Штрихкод) = Тип("УникальныйИдентификатор") Тогда
			НомерПакета = СвойстваПакета.Номер
		Иначе
			НомерПакета = Штрихкод;
		КонецЕсли;
		ПакетНашли = Истина;
		Возврат ИСТИНА;                   
	КонецЕсли;                            
	
КонецФункции

&НаКлиенте
Процедура ОбработкаРезультатаСканированияШтрихКодаПакета(Штрихкод, Результат, Сообщение, ДополнительныеПараметры) Экспорт
    
	Если Не Результат Тогда Возврат КонецЕсли;     
	#Если МобильноеПриложениеКлиент или МобильныйКлиент  Тогда 
		Если ОбработкаРезультатаСканированияШтрихКодаПакетаНаСервере(Штрихкод) Тогда
			Сообщение = "Пакет "+Штрихкод+" найден";
			//СредстваМультимедиа.ВоспроизвестиТекст("Пакет найден",,,,, ИСТИНА);	
			СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
		Иначе
			Сообщение = "Пакет "+Штрихкод+" не обнаружен";
			//СредстваМультимедиа.ВоспроизвестиТекст("Пакет не обнаружен",,,,, ИСТИНА);
		КонецЕсли;
	#Иначе
		Если НЕ ОбработкаРезультатаСканированияШтрихКодаПакетаНаСервере(Штрихкод) Тогда
			Сообщение = "Пакет "+Штрихкод+" не обнаружен";
			Сообщить("Пакет не обнаружен", СтатусСообщения.Внимание);	
		КонецЕсли;
	#КонецЕсли	
	
	ПодключитьОбработчикОжидания("ОбновитьДоступностьВыбораПакета", 0.01, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбновитьДоступностьВыбораПакета", 0.01, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура НомерПакетаПриИзменении(Элемент)
	ОбработкаРезультатаСканированияШтрихКодаПакета(НомерПакета, ЗначениеЗаполнено(НомерПакета), неопределено, неопределено);
КонецПроцедуры

&НаКлиенте
Процедура НомерПакетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 НачатьСканирование(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ВвестиНомерПакетаВручную(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНажата(Команда)
	НомерПакета = НомерПакета + СтрЗаменить(Команда.Имя, "КнопкаНажата", "");
	ПриИзмененииНомераНаКлиенте()
КонецПроцедуры

&НаКлиенте
Процедура Стереть(Команда)
	Если ЗначениеЗаполнено(НомерПакета) Тогда
		НомерПакета = Сред(НомерПакета,1, СтрДлина(НомерПакета)-1);
		ПриИзмененииНомераНаКлиенте()
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНомераНаКлиенте()
	Если СтрДлина(НомерПакета) = 6 Тогда
		ОбработкаРезультатаСканированияШтрихКодаПакетаНаСервере(НомерПакета);	
	ИначеЕсли ПакетНашли Тогда
		ОбработкаРезультатаСканированияШтрихКодаПакетаНаСервере("");
	Иначе
		Возврат;
	КонецЕсли;  
	ОбновитьДоступностьВыбораПакета();
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПовреждения(Команда)
	ДанныеКлюча = ПолучитьКлючЗаписиПоврежденныхПакетов(Пакет);	
	Если ДанныеКлюча = Неопределено Тогда
		ОткрытьФорму("РегистрСведений.ПоврежденныеПакеты.ФормаЗаписи",Новый Структура("НомерПакета", НомерПакета));
	Иначе
		 ОткрытьФорму("РегистрСведений.ПоврежденныеПакеты.ФормаЗаписи",Новый Структура("Ключ", ДанныеКлюча));
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиПоврежденныхПакетов(Пакет) 
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПоврежденныеПакеты.Склад КАК Склад,
	|	ПоврежденныеПакеты.Пакет КАК Пакет,
	|	ПоврежденныеПакеты.ИдентификаторЗаписи КАК ИдентификаторЗаписи
	|ИЗ
	|	РегистрСведений.ПоврежденныеПакеты КАК ПоврежденныеПакеты
	|ГДЕ
	|	ПоврежденныеПакеты.Склад = &Склад
	|	И ПоврежденныеПакеты.Пакет = &Пакет
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИдентификаторЗаписи УБЫВ";
	Запрос.УстановитьПараметр("Склад", ОбщегоНазначенияВызовСервераПовтИсп.Склад());
	Запрос.УстановитьПараметр("Пакет",Пакет);                                     
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий(); 
		Ответ =  Новый Структура("Склад,Пакет,ИдентификаторЗаписи");
		ЗаполнитьЗначенияСвойств(Ответ, Выборка);  
		Возврат РегистрыСведений.ПоврежденныеПакеты.СоздатьКлючЗаписи(Ответ);
	КонецЕсли;
КонецФУнкции

&НаКлиенте
Процедура ИзменитьРасположение(Команда)
	Пар = Новый Структура("Пакет,Ячейка", Пакет, Ячейка);  
	ОткрытьФорму("ОбщаяФорма.ФормаУстановкиПакетаВЯчейку", Пар, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура АдресНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	Пар = Новый Структура("Пакет,Ячейка", Пакет, Ячейка);  
	ОткрытьФорму("Обработка.ИнвентаризацияЯчейки.Форма.ФормаИнвентаризацииШтабеля", Пар, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	ОбщегоНазначенияКлиент.ЗаполнитьСвойстваФормыПриИзмененииПараметровЭкрана(ЭтаФорма);
КонецПроцедуры
