
&НаКлиенте
Асинх Процедура ВыбратьПериодЗаявок(Команда)
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	ПериодЗаявок = Ждать Диалог.РедактироватьАсинх(); 
	Если Не ПериодЗаявок = Неопределено Тогда
		ПодключитьОбработчикОжидания("НачатьОбновлениеСпискаЗаявок", 0.5, ИСТИНА);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОбновлениеСпискаЗаявок()
	 ПолучитьЭлектроннуюОчередьСервер();
	 Элементы.ЗаявкиВыбратьПериодЗаявок.Заголовок = СтрШаблон("Период с %1 по %2", Формат(ПериодЗаявок.ДатаНачала, "ДФ=dd.MM.yy"), Формат(ПериодЗаявок.ДатаОкончания, "ДФ=dd.MM.yy"));
КонецПроцедуры

&НаСервере
Процедура ПолучитьЭлектроннуюОчередьСервер()
	УстановитьПривилегированныйРежим(ИСТИНА);
	
	Если Не http.ЕстьСвязь() Тогда Возврат КонецЕсли;
	ИмяСобытияЖУрнала = "ПолучитьЭлектроннуюОчередь";	
	СтруктураЗапроса = УКО.НоваяСтруктураПроизвольногоЗапроса();
	
	Если ОбщегоНазначенияВызовСервераПовтИсп.ЭтоERP() Тогда
		СтруктураЗапроса.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаявкаНаПогрузку.Ссылка) КАК гуид,
		|	ЗаявкаНаПогрузку.Контрагент.Наименование КАК Покупатель,
		|	ВЫРАЗИТЬ(ЗаявкаНаПогрузку.Транспорт.Наименование КАК СТРОКА(6)) КАК Транспорт,
		|	ЗаявкиНаПогрузку.Отгружено_Дата КАК Отгружено,
		|	НЕ ЗаявкиНаПогрузку.Отгружено_Дата = ДАТАВРЕМЯ(1, 1, 1) КАК АвтоОтгружено,
		|	ЗаявкаНаПогрузку.ПланДатаПогрузки КАК ПланДата
		|ИЗ
		|	Документ.pu_ЗаявкаНаПогрузку КАК ЗаявкаНаПогрузку
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.pu_ЗаявкиНаПогрузку КАК ЗаявкиНаПогрузку
		|		ПО ЗаявкиНаПогрузку.Заявка = ЗаявкаНаПогрузку.Ссылка
		|ГДЕ
		|	ЗаявкаНаПогрузку.Дата МЕЖДУ &Дата1 И &Дата2
		|	И НЕ ЗаявкаНаПогрузку.ПометкаУдаления";
	Иначе
		СтруктураЗапроса.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(VLP_ЗаявкаНаПогрузку.Ссылка) КАК гуид,
		|	VLP_ЗаявкаНаПогрузку.Покупатель.Наименование КАК Покупатель,
		|	ВЫРАЗИТЬ(VLP_ЗаявкаНаПогрузку.НомерАвто КАК СТРОКА(6)) КАК Транспорт,
		|	ЗаявкиНаПогрузку.Отгружено_Дата КАК Отгружено,
		|	НЕ ЗаявкиНаПогрузку.Отгружено_Дата = ДАТАВРЕМЯ(1, 1, 1) КАК АвтоОтгружено,
		|	VLP_ЗаявкаНаПогрузку.ПланДатаПогрузки КАК ПланДата
		|ИЗ
		|	Документ.VLP_ЗаявкаНаПогрузку КАК VLP_ЗаявкаНаПогрузку
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкиНаПогрузку КАК ЗаявкиНаПогрузку
		|		ПО ЗаявкиНаПогрузку.Заявка = VLP_ЗаявкаНаПогрузку.Ссылка
		|ГДЕ
		|	VLP_ЗаявкаНаПогрузку.Дата МЕЖДУ &Дата1 И &Дата2
		|	И НЕ VLP_ЗаявкаНаПогрузку.ПометкаУдаления";	
	КонецЕсли;
	СтруктураЗапроса.ПараметрыЗапроса.Вставить("Дата1", ПериодЗаявок.ДатаНачала);
	СтруктураЗапроса.ПараметрыЗапроса.Вставить("Дата2", КонецДня(ПериодЗаявок.ДатаОкончания));
	
	ДанныеПУ = УКО.ПолучитьДанныеПроизвольногоЗапроса(СтруктураЗапроса,,ИмяСобытияЖУрнала);
	Если ДанныеПУ = Неопределено Тогда
		ЗаписьИстории(ИмяСобытияЖУрнала,"не смог получить данные", ИСТИНА);
		Возврат;
	КонецЕсли;
	Заявки.Очистить();
	Заявки.Загрузить(ДанныеПУ);
	Заявки.Сортировать("ПланДата Убыв");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	ТекДанные = Элементы.Заявки.ТекущиеДанные;
	Пар = Новый Структура("Заявка", ТекДанные.гуид);
	ОткрытьФорму("ОбщаяФорма.ФормаЗаявкиНаПогрузку", Пар, ЭтаФорма);
КонецПроцедуры 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПериодЗаявок = Новый СтандартныйПериод(ВариантСтандартногоПериода.Последние7Дней);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НачатьОбновлениеСпискаЗаявок()
КонецПроцедуры


